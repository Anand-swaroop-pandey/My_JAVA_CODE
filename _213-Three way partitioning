//Bruteforce Approach

import java.util.*;
public class Main
{
   public static void main(String[] args)
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
         {
            int[] arr=new int[n];
           System.out.printf("Enter %d Elements:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
           
           System.out.println("Enter Low Value:");
           int lowVal=sc.nextInt();
           System.out.println("Enter High Value:");
           int highVal=sc.nextInt();
           
            threeWayPartition(arr,lowVal,highVal);
             System.out.println("Three Way Partitioned Array :");
             for(int i=0;i<n;i++)
                System.out.println(arr[i]);
         }
         else
            System.out.println("Invalid Choice");
   }

    public static void threeWayPartition(int arr[], int lowVal, int highVal)
    {
      Arrays.sort(arr);
    }
}

//Optimal Approach(Dutch National Flag Algorithm)

import java.util.Scanner;
public class Test
{
   public static void main(String[] args)
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
         {
            int[] arr=new int[n];
           System.out.printf("Enter %d Elements:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
           
           System.out.println("Enter Low Value:");
           int lowVal=sc.nextInt();
           System.out.println("Enter High Value:");
           int highVal=sc.nextInt();
           
            threeWayPartition(arr,lowVal,highVal);
             System.out.println("Three Way Partitioned Array :");
             for(int i=0;i<n;i++)
                System.out.println(arr[i]);
         }
         else
            System.out.println("Invalid Choice");
   }

    public static void threeWayPartition(int arr[], int lowVal, int highVal)
    {
     int smaller=0,i=0,greater=(arr.length-1);
      while(i<=greater)
         if(arr[i]<lowVal)
         {
            swap(arr,smaller,i);
            smaller++;
            i++; 
         }
         else if(arr[i]>highVal)
         {
             swap(arr,i,greater);
             greater--;  
         }
         else 
             i++;
    }
     public static void swap(int[]arr,int i,int j)
   {
       int temp=arr[i];
       arr[i]=arr[j];
       arr[j]=temp;
   }
}
