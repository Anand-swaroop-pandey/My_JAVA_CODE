//Bruteforce Approach
import java.util.Scanner; 
public class Test
{
   public static void main(String[] args)
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
       {
           int[] arr=new int[n];
           
           System.out.printf("Enter %d Elements:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
              
           System.out.println("Enter X:");
           int X=sc.nextInt();
           
           if(isOccurMoreThenHalfTimes(arr,X))
              System.out.printf("YES,%d Occurs more than %d times in the Given Sorted Array",X,n/2);
           else
              System.out.printf("NO,%d Occurs less than %d times in the Given Sorted Array",X,n/2);
       }
       else
          System.out.println("Invalid Choice");
       
   }
   
   public static boolean isOccurMoreThenHalfTimes(int[] arr,int X)
   {
       int count=0,n=arr.length;
       for(int i=0;i<n;i++)
       {
           if(arr[i]==X)
             count++;
         
           if(count>(n/2))    
              return true;
       }
       return false;
   }
}



//Better Approach

import java.util.Scanner;
public class Test
{
   public static void main(String[] args)
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
       {
           int[] arr=new int[n];
           
           System.out.printf("Enter %d Elements:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
              
           System.out.println("Enter X:");
           int X=sc.nextInt();
           
           if(isOccurMoreThenHalfTimes(arr,X))
              System.out.printf("YES,%d Occurs more than %d times in the Given Sorted Array",X,n/2);
           else
              System.out.printf("NO,%d Occurs less than %d times in the Given Sorted Array",X,n/2);
       }
       else
          System.out.println("Invalid Choice");
   }
   
   public static boolean isOccurMoreThenHalfTimes(int[]arr,int X)
   {
       int n=arr.length;
       int index=firstIndex(arr,X);
       if(index!=-1)
         if((index+(n/2))<n && arr[index+(n/2)]==X)
            return true;  
       
       return false;   
   }


   public static int firstIndex(int[]arr,int key)
   {
      int low=0,high=arr.length-1,first=-1;
      while(low<=high)
      {
          int mid=(low+high)/2;
          if(arr[mid]==key)
          {
            first=mid;
            high=mid-1;   
          }
          else if(key<arr[mid])
            high=mid-1;
          else if(key>arr[mid])
            low=mid+1;
      }
      return first;
   }
}


//Optimal Approach
/*
Since a majority element occurs more than n/2 times in an array,
it will always be the middle element. We can use this logic to check if the given number is the majority element.
*/

import java.util.Scanner;
public class Test
{
   public static void main(String[] args)
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
       {
           int[] arr=new int[n];
           
           System.out.printf("Enter %d Elements:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
              
           System.out.println("Enter X:");
           int X=sc.nextInt();
           
           if(isOccurMoreThenHalfTimes(arr,X))
              System.out.printf("YES,%d Occurs more than %d times in the Given Sorted Array",X,n/2);
           else
              System.out.printf("NO,%d Occurs less than %d times in the Given Sorted Array",X,n/2);
       }
       else
          System.out.println("Invalid Choice");
   }
   
   public static boolean isOccurMoreThenHalfTimes(int[]arr,int X)
   {
       if(arr[arr.length/2] == X)
         return true;
       else
         return false;
   }
}
