//Method 1(Naive Approach)//Will only work for Positive Integers ,fail for Negative Integers and 0
import java.util.Scanner;
public class Test
{
  public static void main (String[]args)
  {
    Scanner sc = new Scanner (System.in);
    int num= sc.nextInt();
    System.out.println (decimalTobinary(num));
  }
  
  
  public static String decimalTobinary(int dec)
  {
     String bin="";
     while(dec!=0)
     {
        bin=bin+(dec%2);
        dec=dec/2;
     }
     return reverse(bin);
  }
  
  public static String reverse(String str)
  {
      String rev="";
      
      for(int i=str.length()-1;i>=0;i--)
         rev=rev+str.charAt(i);
         
      return rev;
  }
  
}


//Method 2(Better approach) (Will work for Positive Integers ,Negative Integers and 0)

import java.util.Scanner;
public class Test
{
  public static void main (String[]args)
  {
    Scanner sc = new Scanner (System.in);
    int num= sc.nextInt();
    System.out.println (decimalTobinary(num));
  }  
  
  public static String decimalTobinary(int dec)
  {
     String bin="";
     if(dec==0)
       return "0";
       
     for(int i=0;i<(4*8);i++)
     {
       int mask=1<<i;
       if((dec & mask)==0)
         bin+=0;
       else
         bin+=1;
     }
     
     int index=removeTrailingZeros(bin);

     return reverse(bin,index);
  }
  
  public static int removeTrailingZeros(String str)
  {
      String res="";
      int i=(str.length()-1);
      while(i>=0 && str.charAt(i)=='0')
        i--;
      return i;
  }
  
  public static String reverse(String str,int index)
  {
      String rev="";
      for(int i=index;i>=0;i--)
           rev=rev+str.charAt(i);
      return rev;
  }
}


//Method 3(optimal approach) (Will work for Positive Integers ,Negative Integers and 0)
import java.util.Scanner;
public class Test
{
  public static void main (String[]args)
  {
    Scanner sc = new Scanner (System.in);
    int num= sc.nextInt();
    System.out.println (decimalTobinary(num));
  }  
  
  public static String decimalTobinary(int dec)
  {
     if(dec==0)
       return "0";
       
     String bin="";
     int flag=0;
     for(int i=31;i>=0;i--)
     {
       int mask=1<<i;
       if(flag==1)
       {
          if((dec&mask)==0) 
             bin+=0; 
          else
             bin+=1;
       }
       else
       {
          if((dec&mask)!=0) 
          {
             bin+=1; 
             flag=1;
          }
       }
     }
     return bin;
  }
}  
  
  
//Method 4  (inbuilt Method) (Will work for Positive Integers ,Negative Integers and 0)
import java.util.Scanner;
public class Test
{
  public static void main (String[]args)
  {
    Scanner sc = new Scanner (System.in);
    int num= sc.nextInt();
    System.out.println (decimalTobinary(num));
  }  
  
  public static String decimalTobinary(int dec)
  {
    String bin_value =Integer.toBinaryString(dec) ;
    return bin_value;
  }
}
