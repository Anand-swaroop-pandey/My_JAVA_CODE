//Bruteforce Approach
import java.util.*;
public class Test
{
    public static void main(String[] args) {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
       {
           int[] arr=new int[n];
           System.out.printf("Enter %d Elements of Array:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
	      
           int index=removeDuplicatesFromUnsortedArray(arr);
	   
           System.out.println("Duplicate Free Array is :");
           for(int i=0;i<index;i++)
              System.out.printf(arr[i]+" ");
       }
       else
          System.out.println("Invalid Choice");
      }
	
      public static int removeDuplicatesFromUnsortedArray(int[] arr)
      {
         Arrays.sort(arr);
	 return removeDuplicatesFromSortedArray(arr);
      } 
	
      public static int removeDuplicatesFromSortedArray(int[] arr)
      {
         int n=arr.length,j=0;
	 for(int i=0;i<(n-1);i++)
           if(arr[i]!=arr[i+1])
             arr[j++]=arr[i];
	       
          arr[j++]=arr[n-1];
	   
	  return j;
      }
}


//Improved Approach
import java.util.Scanner;
public class Test
{
    public static void main(String[] args) {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
       {
          int[] arr=new int[n];
          System.out.printf("Enter %d Elements of Array:\n",n);
          for(int i=0;i<n;i++)
            arr[i]=sc.nextInt();
	    
          int index=removeDuplicatesFromUnsortedArray(arr);
	  
          System.out.println("Duplicate Free Array is :");
          for(int i=0;i<index;i++)
            System.out.printf(arr[i]+" ");
       }
       else
          System.out.println("Invalid Choice");
     }
	
     public static int removeDuplicatesFromUnsortedArray(int[] arr)
     {
          int n=arr.length,k=0;
          for(int i=0;i<n;i++)
          {
	    int j;
            for(j=i+1;j<n;j++)
              if(arr[i]==arr[j])
                break;
               
            if(j==n)
              arr[k++]=arr[i];
           }
	   
         return k; 
      } 
}


//Better Approach
import java.util.Scanner;
public class Test
{
     public static void main(String[] args) {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
       {
           int[] arr=new int[n];
           System.out.printf("Enter %d Elements of Array:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
	      
           int index=removeDuplicatesFromUnsortedArray(arr);
	   
           System.out.println("Duplicate Free Array is :");
           for(int i=0;i<index;i++)
              System.out.printf(arr[i]+" ");
       }
       else
         System.out.println("Invalid Choice");
    }
	
    public static int removeDuplicatesFromUnsortedArray(int[] arr)
    {
        int n=arr.length,j=0;
        int[] freqArr=new int[n];
        countFrequecy(arr,freqArr);
        for(int i=0;i<n;i++)
          if(freqArr[i]!=-1)
             arr[j++]=arr[i];
	     
        return j;
     } 
	
     public static void countFrequecy(int[] arr,int[] freqArr)
     {
         int n=arr.length;
         for(int i=0;i<n;i++)
         {
            if(freqArr[i]==-1)
               continue;
	       
            int count=1;
	    
            for(int j=i+1;j<n;j++)
               if(arr[i]==arr[j])
               {
                   freqArr[j]=-1;
                   count++;
               }
           freqArr[i]=count;       
          }
      }
}


//Best Approach
import java.util.*;
public class Test
{
      public static void main(String[] args)
      {
         Scanner sc=new Scanner(System.in);
         System.out.println("Enter the Size of the Array");
         int n=sc.nextInt();
         if(n>0)
         {
           int[] arr=new int[n];
           System.out.printf("Enter %d Elements of Array:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
           int index=removeDuplicatesFromUnsortedArray(arr);
           System.out.println("Duplicate Free Array is :");
           for(int i=0;i<index;i++)
              System.out.printf(arr[i]+" ");
          }
          else
            System.out.println("Invalid Choice");
	}
	
        public static int removeDuplicatesFromUnsortedArray(int[] arr)
	{
          int n=arr.length;
          HashSet<Integer>hs=new HashSet<>(n);
          for(int i=0;i<n;i++)
            hs.add(arr[i]);
      
          int j=0;
          for(int i=0;i<n;i++)
            if(hs.contains(arr[i]))
            {
              arr[j++]=arr[i];
              hs.remove(arr[i]);
            }
           return j;
	}
}


//Optimal Approach
import java.util.*;
public class Test
{
      public static void main(String[] args)
      {
         Scanner sc=new Scanner(System.in);
         System.out.println("Enter the Size of the Array");
         int n=sc.nextInt();
         if(n>0)
         {
           int[] arr=new int[n];
           System.out.printf("Enter %d Elements of Array:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
	      
           int index=removeDuplicatesFromUnsortedArray(arr);
	   
           System.out.println("Duplicate Free Array is :");
           for(int i=0;i<index;i++)
              System.out.printf(arr[i]+" ");
          }
          else
            System.out.println("Invalid Choice");
	}
	
        public static int removeDuplicatesFromUnsortedArray(int[] arr)
	{
           int n=arr.length,j=0;
           LinkedHashSet<Integer>lhs=new LinkedHashSet<>(n);
           for(int i=0;i<n;i++)
             lhs.add(arr[i]);
       
           for(int key : lhs)
             arr[j++]=key;
              
           return j;
	}
}
