import java.util.Scanner;
public class Test
{
   public static void main(String[] args)
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter Size of the Array");
       int n=sc.nextInt();
       if(n>0)
       {
           int[] arr=new int[n];
             
           System.out.printf("Enter %d Elements:\n",n);
           for(int i=0;i<n;i++)
                arr[i]=sc.nextInt();
                
           System.out.println("Entered Elements are:");
            for(int i=0;i<n;i++)
                  System.out.println(arr[i]);
                  
            System.out.println("Enter Upper Range:");
            int range=sc.nextInt();
            
            if(n>1)
              countingSort(arr,range);
            
            System.out.println("Sorted Array:");
            for(int i=0;i<n;i++)
                System.out.println(arr[i]);
       }
       else
          System.out.println("Invalid Choice");    
   }

   public static void countingSort(int[]arr,int range)//will only work for +ve integers
   {
        int[] count=new int[range+1];
        int n=arr.length;
        int[] temp=new  int[n];
       
        for(int i=0;i<n;i++)
           count[arr[i]]++;
          
        for(int i=1;i<(range+1);i++)
           count[i]+=count[i-1];
           
        for(int i=(n-1);i>=0;i--)
           temp[--count[arr[i]]]=arr[i];
          
        for(int i=0;i<n;i++)
           arr[i]=temp[i];
   }
}

/*
 Counting sort is efficient if the range of input data is not significantly greater than the number of objects to be sorted. 
 Consider the situation where the input sequence is between range 1 to 10K and the data is 10, 5, 10K, 5K. 
*/

// for characters
import java.util.Scanner;
public class Test
{
   public static void main(String[] args)
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter Size of the Character Array");
       int n=sc.nextInt();
       if(n>0)
       {
           char[] arr=new char[n];
             
           System.out.printf("Enter %d Characters:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.next().charAt(0);
                
           System.out.println("Entered Characters are:");
           for(int i=0;i<n;i++)
               System.out.println(arr[i]);
            
            if(n>1)
              countingSort(arr,255);   //https://www.commfront.com/pages/ascii-chart
            
            System.out.println("Sorted Array:");
            for(int i=0;i<n;i++)
                System.out.println(arr[i]);
        }
        else
           System.out.println("Invalid Choice");
   }

   public static void countingSort(char[] arr,int range)
   {
       int[] count=new int[range+1];
       int n=arr.length;
       char[] temp=new char[n];
       
       for(int i=0;i<n;i++)
          count[arr[i]]++;
          
       for(int i=1;i<(range+1);i++)
          count[i]+=count[i-1];
           
       for(int i=(n-1);i>=0;i--)
           temp[--count[arr[i]]]=arr[i];
          
        for(int i=0;i<n;i++)
           arr[i]=temp[i];
   }
}
