//Bruteforce Approach
import java.util.*;
public class Test
{
    public static void main(String[] args)
    {
      	 Scanner sc=new Scanner(System.in);
         System.out.println("Enter the Size of the Array1");
         int m=sc.nextInt();
         
         System.out.println("Enter the Size of the Array2");
         int n=sc.nextInt();
         
         if(m>0 && n>0)
         {
            int[] arr1=new int[m];
            int[] arr2=new int[n];
            System.out.printf("Enter %d Elements of Array1:\n",m);
            for(int i=0;i<m;i++)
               arr1[i]=sc.nextInt();
            
            System.out.printf("Enter %d Elements of Array2:\n",n);
            for(int i=0;i<n;i++)
               arr2[i]=sc.nextInt();
               
            System.out.println("Enter Target:");
            int target=sc.nextInt();
               
            System.out.printf("%d pairs exists whose sum is equal to %d",countPairs(arr1,m,arr2,n,target),target);
         }
         else
           System.out.println("Invalid Choice");
    }
    
    public static int countPairs(int[] arr1, int m,int[] arr2,int n,int target)
    {
      int cnt=0;
      for(int i=0;i<m;i++)
        for(int j=0;j<n;j++)
          if((arr1[i]+arr2[j])==target)
             cnt++;
      return cnt;
    }
}

//Better Approach
import java.util.*;
public class Test
{
    public static void main(String[] args)
    {
      	 Scanner sc=new Scanner(System.in);
         System.out.println("Enter the Size of the Array1");
         int m=sc.nextInt();
         
         System.out.println("Enter the Size of the Array2");
         int n=sc.nextInt();
         
         if(m>0 && n>0)
         {
            int[] arr1=new int[m];
            int[] arr2=new int[n];
            System.out.printf("Enter %d Elements of Array1:\n",m);
            for(int i=0;i<m;i++)
               arr1[i]=sc.nextInt();
            
            System.out.printf("Enter %d Elements of Array2:\n",n);
            for(int i=0;i<n;i++)
               arr2[i]=sc.nextInt();
               
            System.out.println("Enter Target:");
            int target=sc.nextInt();
               
            System.out.printf("%d pairs exists whose sum is equal to %d",countPairs(arr1,m,arr2,n,target),target);
         }
         else
           System.out.println("Invalid Choice");
    }
    
    public static int countPairs(int[] arr1, int m,int[] arr2,int n,int target)
    {
      int cnt=0;
      for(int i=0;i<m;i++)
          if(binarySearch(arr2,target-arr1[i]))
             cnt++;
      return cnt;
    }
    
    public static boolean binarySearch(int[]arr,int key)
   {
      int low=0;
      int high=arr.length-1;
      while(low<=high)
      {
          int mid=(low+high)/2;
          if(arr[mid]==key)
            return true;
          else if(key<arr[mid])
            high=mid-1;
          else if(key>arr[mid])
            low=mid+1;
      }
      return false;//key doesnot exists
   }
}


//Futher Improved Approach

import java.util.*;
public class Test
{
    public static void main(String[] args)
    {
      	 Scanner sc=new Scanner(System.in);
         System.out.println("Enter the Size of the Array1");
         int m=sc.nextInt();
         
         System.out.println("Enter the Size of the Array2");
         int n=sc.nextInt();
         
         if(m>0 && n>0)
         {
            int[] arr1=new int[m];
            int[] arr2=new int[n];
            System.out.printf("Enter %d Elements of Array1:\n",m);
            for(int i=0;i<m;i++)
               arr1[i]=sc.nextInt();
            
            System.out.printf("Enter %d Elements of Array2:\n",n);
            for(int i=0;i<n;i++)
               arr2[i]=sc.nextInt();
               
            System.out.println("Enter Target:");
            int target=sc.nextInt();
               
            System.out.printf("%d pairs exists whose sum is equal to %d",countPairs(arr1,m,arr2,n,target),target);
         }
         else
           System.out.println("Invalid Choice");
    }
    
    public static int countPairs(int[] arr1, int m,int[] arr2,int n,int target)
    {
      HashSet<Integer>hs=new HashSet<>();
      for(int val : arr2)
        hs.add(val);
        
      int cnt=0;
      for(int i=0;i<m;i++)
          if(hs.contains(target-arr1[i]))
             cnt++;
      return cnt;
    }
}

//Optimal Approach

import java.util.*;
public class Test
{
    public static void main(String[] args)
    {
      	 Scanner sc=new Scanner(System.in);
         System.out.println("Enter the Size of the Array1");
         int m=sc.nextInt();
         
         System.out.println("Enter the Size of the Array2");
         int n=sc.nextInt();
         
         if(m>0 && n>0)
         {
            int[] arr1=new int[m];
            int[] arr2=new int[n];
            System.out.printf("Enter %d Elements of Array1:\n",m);
            for(int i=0;i<m;i++)
               arr1[i]=sc.nextInt();
            
            System.out.printf("Enter %d Elements of Array2:\n",n);
            for(int i=0;i<n;i++)
               arr2[i]=sc.nextInt();
               
            System.out.println("Enter Target:");
            int target=sc.nextInt();
               
            System.out.printf("%d pairs exists whose sum is equal to %d",countPairs(arr1,m,arr2,n,target),target);
         }
         else
           System.out.println("Invalid Choice");
    }
    
    public static int countPairs(int[] arr1, int m,int[] arr2,int n,int target)
    {
      int i=0,j=n-1,cnt=0;
      while(i<m & j>=0)
        if((arr1[i]+arr2[j])==target)
        {
           cnt++;
           i++;
           j--;
        }
        else if((arr1[i]+arr2[j])<target)
          i++;
        else//((arr1[i]+arr2[j])>target)
          j--;
      
      return cnt;
    }
}
