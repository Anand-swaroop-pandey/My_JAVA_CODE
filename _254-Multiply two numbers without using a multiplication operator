//Method 1
import java.util.Scanner;
public class Test
{
	public static void main(String[] args)
	{
	    Scanner sc=new Scanner(System.in);
	    System.out.println("Enter Number1:");
        int num1=sc.nextInt();
        System.out.println("Enter Number2:");
        int num2=sc.nextInt();
        System.out.printf("%d x %d =%d\n",num1,num2,muntiply1(num1,num2));
        System.out.printf("%d x %d =%d",num1,num2,muntiply2(num1,num2));
	}
    /*
    The idea is that for given two numbers a and b, we can get a×b by adding an integer a exactly b times to the result. 
    */
    public static int muntiply1(int num1,int num2)
    {
        int res=0;
       for(int i=1;i<=num2;i++)
         res=res+num1;
         return res;
    }
    /*
    The idea is that for given two numbers a and b, we can get a×b by adding an integer b exactly a times to the result. 
    */
     public static int muntiply2(int num1,int num2)
    {
        int res=0;
       for(int i=1;i<=num1;i++)
         res=res+num2;
         return res;
    }
}

//Method 2
import java.util.Scanner;
class Test
{
    public static void main(String[] args)
	{
	    Scanner sc=new Scanner(System.in);
	    System.out.println("Enter Number1:");
        int num1=sc.nextInt();
        System.out.println("Enter Number2:");
        int num2=sc.nextInt();
        System.out.printf("%d x %d = %d\n",num1,num2,multiply(num1,num2));
	}
	
	public static long multiply(int num1, int num2)
	{
	   long ans = 0;
	   for(int count=0;num2!=0;count++)
           {
		if ((num2 & 1)!=0)			
		  ans=ans+(num1<<count);   //(num1<<count)=num1*(2^count)
		num2=num2>>1;    //(num2>>1)=(num2/2);
	   }
	   return ans;
	}
}
/*
 The idea is based on the fact that every number can be represented in binary form. 
 And multiplication with a number is equivalent to multiplication with powers of 2.
 Powers of 2 can be obtained using left shift operator.
Check for every set bit in the binary representation of num2 and for every set bit left shift num1, "count" times where count is place value of the set bit of num2 and add that value to answer.
*/

