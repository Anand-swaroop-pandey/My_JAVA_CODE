import java.util.Scanner;
import java.lang.Math;
public class Test 
{
     public static void main (String[]args) 
     {
    
      Scanner sc = new Scanner (System.in); 
      String str= sc.nextLine ();
      
      System.out.println(binaryToDecimal(Integer.parseInt(str)));
      System.out.println(binaryToDecimal1(str));
      System.out.println(binaryToDecimal2(str));
     } 
    //Naive approach
     public static int binaryToDecimal(int bin) 
     {
         int count=0;
         int decValue=0;
         while(bin!=0)
         {
            int rem=bin%10;
            if(rem==1)
             decValue+=(int)Math.pow(2,count); 
            bin/=10;
            count++;
         }
         return decValue;
     }
    //optimal approach
    static int binaryToDecimal1(String bin)
    {
        int dec_value = 0;
        int count = 0;
        for (int i=bin.length()-1; i >= 0; i--) 
        {
            if (bin.charAt(i)== '1')
                dec_value +=(int)Math.pow(2,count);
            count++;
        }
        return dec_value;
    }
    
    //inbuilt function
    
     static int binaryToDecimal2(String bin)
    {
        int dec_value=Integer.parseInt(bin,2); 
        return dec_value;
    }
}
