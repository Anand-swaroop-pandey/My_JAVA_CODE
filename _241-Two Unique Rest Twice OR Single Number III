//Bruteforce Approach
import java.util.Scanner;
public class Test
{
   public static void main(String[] args)
   {
	System.out.println("Enter the Size of the Array:");
	Scanner sc=new Scanner(System.in);
	int n=sc.nextInt();
	int[] arr=new int[n];
	System.out.printf("Enter %d of the Array:\n",n);
	for(int i=0;i<n;i++)
	  arr[i]=sc.nextInt();
	 twoUniqueRestTwice(arr); 	
    }
	
    public static void twoUniqueRestTwice(int arr[])
   {
      System.out.println("Two Unique Elements are:");
      int count=0;
      int n=arr.length;
      for(int i=0;i<n;i++)
      {
          int j;
          for(j=0;j<n;j++)
            if(j!=i && arr[i]==arr[j])
               break;
          if(j==n)
          {
             count++;
             System.out.println(arr[i]+" ");
             if(count==2)
              break;
          }
      }
   }
}

//Better Approach
import java.util.Scanner;
public class Test
{
    public static void main(String[] args)
    {
	System.out.println("Enter the Size of the Array:");
	Scanner sc=new Scanner(System.in);
	int n=sc.nextInt();
	int[] arr=new int[n];
	System.out.printf("Enter %d of the Array:\n",n);
	for(int i=0;i<n;i++)
	arr[i]=sc.nextInt();
	twoUniqueRestTwice(arr); 				
     }
	    
    public static void twoUniqueRestTwice(int arr[])
    {
	  System.out.println("Two Unique Elements are :");
	  int[] freqArr=new int[arr.length];
          countFrequency(arr,freqArr);
	  
	  int cnt=0;
          for(int i=0;i<arr.length;i++)
            if(freqArr[i]==1)
	    {
	      cnt++;
	      System.out.print(arr[i]+" ");
	      if(cnt==2)
	         break;
	    }       
    }
	    
   public static void countFrequency(int[] arr,int[] freqArr)
   {
	int count;   
	for(int i=0;i<arr.length;i++)
        {
	    if(freqArr[i]==-1)
	      continue;
	    count=1;
	    for(int j=i+1;j<arr.length;j++)
	       if(arr[i]==arr[j])
	       {
	         freqArr[j]=-1;
	         count++;
               }
	    freqArr[i]=count; 
	 }
    }
}

//Best Approach
import java.util.*;
public class Test
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    System.out.println("Enter the Size of the Array");
	    int n=sc.nextInt();
	    int[] arr=new int[n];
	     System.out.printf("Enter %d Elements\n",n);
	    for(int i=0;i<n;i++)
	       arr[i]=sc.nextInt();
            twoUniqueRestTwice(arr);
	}
	
    public static void twoUniqueRestTwice(int arr[])
    {
       int n=arr.length;
       HashMap<Integer,Integer>hm=new HashMap<>(n);
       for(int i=0;i<n;i++)
         if(hm.containsKey(arr[i]))
           hm.put(arr[i],hm.get(arr[i])+1);
         else
           hm.put(arr[i],1);
       
       System.out.println("Two Unique Elements are:");
       int cnt=0;
       for(int i=0;i<n;i++)
         if(hm.get(arr[i])==1)
         {
               cnt++;
	       System.out.println(arr[i]+" ");
	       if(cnt==2)
	         break;  
         }
    }
}


//Optimal Approach
import java.util.Scanner;
public class Test
{
     public static void main(String[] args)
    {
	System.out.println("Enter the Size of the Array:");
	Scanner sc=new Scanner(System.in);
	int n=sc.nextInt();
	int[] arr=new int[n];
	System.out.printf("Enter %d of the Array:\n",n);
	for(int i=0;i<n;i++)
	  arr[i]=sc.nextInt();
	twoUniqueRestTwice(arr); 
    }
		
    public static void twoUniqueRestTwice(int arr[])
    {
          int xXory=0;
          for(int val:arr)
            xXory=xXory^val;
             
          int rmsbm=rMSBM(xXory);
          
          int x=0,y=0;
          for(int val:arr)
            if((val & rmsbm)==0)
               x=x^val;
            else
               y=y^val;
               
        System.out.printf("Two Unique Elements are : %d and %d",x,y);
    }
	   
   public static int rMSBM(int n)
   {
       int rsbm= n & twosCompliment(n);
       return rsbm;
   }
		
   public static int twosCompliment(int n)
   {
       return -n;//(~n+1);
   }		
}
  
