//Bruteforce Approach
import java.util.*;
public class Test
{
    public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
        System.out.println("Enter the Size of Array");
        int n=sc.nextInt();
        if(n<1)
        {
           System.out.println("Invalid Choice");
           return;
        }
        int[]arr1=new int[n];
        int[]arr2=new int[n];
        int[]arr3=new int[n];
        int[]arr4=new int[n];
        
        System.out.printf("Enter %d Elements of Array1 :\n",n);
        for(int i=0;i<n;i++)
          arr1[i]=sc.nextInt();
          
        System.out.printf("Enter %d Elements of Array2 :\n",n);
        for(int i=0;i<n;i++)
          arr2[i]=sc.nextInt();
          
        System.out.printf("Enter %d Elements of Array3 :\n",n);
        for(int i=0;i<n;i++)
          arr3[i]=sc.nextInt();
        
        System.out.printf("Enter %d Elements of Array4 :\n",n);
        for(int i=0;i<n;i++)
          arr4[i]=sc.nextInt();
          
        System.out.println("Count of Tuples Such that (arr1[i] + arr2[j] + arr3[k] + arr4[l])== 0  are :"+fourSumCount(arr1,arr2,arr3,arr4,n));
    }
	
    public static int fourSumCount(int[] arr1, int[] arr2, int[] arr3, int[] arr4,int n) 
    {
      int fourSumCount=0;
      for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
          for(int k=0;k<n;k++)
             for(int l=0;l<n;l++)
                if((arr1[i]+arr2[j]+arr3[k]+arr4[l])==0)
                  fourSumCount++;
      
       return fourSumCount;
    }
}



//Better Approach
import java.util.*;
public class Test
{
   public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
        System.out.println("Enter the Size of Array");
        int n=sc.nextInt();
        if(n<1)
        {
           System.out.println("Invalid Choice");
           return;
        }
        int[]arr1=new int[n];
        int[]arr2=new int[n];
        int[]arr3=new int[n];
        int[]arr4=new int[n];
        
        System.out.printf("Enter %d Elements of Array1 :\n",n);
        for(int i=0;i<n;i++)
          arr1[i]=sc.nextInt();
          
        System.out.printf("Enter %d Elements of Array2 :\n",n);
        for(int i=0;i<n;i++)
          arr2[i]=sc.nextInt();
          
        System.out.printf("Enter %d Elements of Array3 :\n",n);
        for(int i=0;i<n;i++)
          arr3[i]=sc.nextInt();
        
        System.out.printf("Enter %d Elements of Array4 :\n",n);
        for(int i=0;i<n;i++)
          arr4[i]=sc.nextInt();
          
        System.out.println("Count of Tuples Such that (arr1[i] + arr2[j] + arr3[k] + arr4[l])== 0  are :"+fourSumCount(arr1,arr2,arr3,arr4,n));
   }
	
   public static int fourSumCount(int[] arr1, int[] arr2, int[] arr3, int[] arr4,int n) 
   {
      HashMap<Integer,Integer>hm=new HashMap<>();
      int tripletSum,remSum,fourSumCount=0;
      
      for(int l=0;l<n;l++)
        if(hm.containsKey(arr4[l]))
           hm.put(arr4[l],hm.get(arr4[l])+1);
        else
           hm.put(arr4[l],1);
      
      
      for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
          for(int k=0;k<n;k++)
          {
            tripletSum=arr1[i]+arr2[j]+arr3[k];
            remSum=(0-tripletSum);
            
            if(hm.containsKey(remSum))
              fourSumCount+=hm.get(remSum);
          }
      
       return fourSumCount;
    }
}


//Optimal Approach
import java.util.*;
public class Test
{
    public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.println("Enter the Size of Array");
        int n=sc.nextInt();
        if(n<1)
        {
           System.out.println("Invalid Choice");
           return;
        }
        int[]arr1=new int[n];
        int[]arr2=new int[n];
        int[]arr3=new int[n];
        int[]arr4=new int[n];
        
        System.out.printf("Enter %d Elements of Array1 :\n",n);
        for(int i=0;i<n;i++)
          arr1[i]=sc.nextInt();
          
        System.out.printf("Enter %d Elements of Array2 :\n",n);
        for(int i=0;i<n;i++)
          arr2[i]=sc.nextInt();
          
        System.out.printf("Enter %d Elements of Array3 :\n",n);
        for(int i=0;i<n;i++)
          arr3[i]=sc.nextInt();
        
        System.out.printf("Enter %d Elements of Array4 :\n",n);
        for(int i=0;i<n;i++)
          arr4[i]=sc.nextInt();
          
        System.out.println("Count of Tuples Such that (arr1[i] + arr2[j] + arr3[k] + arr4[l])== 0  are :"+fourSumCount(arr1,arr2,arr3,arr4,n));
    }
	
    public static int fourSumCount(int[] arr1, int[] arr2, int[] arr3, int[] arr4,int n) 
    {
      HashMap<Integer,Integer>hm=new HashMap<>();
      int pairSum,remPairSum,fourSumCount=0;
      
      for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
        {
          pairSum=arr1[i]+arr2[j];
            
          if(hm.containsKey(pairSum))
            hm.put(pairSum,hm.get(pairSum)+1);
          else
            hm.put(pairSum,1);
        }
          
 
      for(int k=0;k<n;k++)
        for(int l=0;l<n;l++)
        {
          pairSum=arr3[k]+arr4[l];
          remPairSum=(0-(arr3[k]+arr4[l]));
            
          if(hm.containsKey(remPairSum))
             fourSumCount+=hm.get(remPairSum);
        }
      
       return fourSumCount;
   }
}
