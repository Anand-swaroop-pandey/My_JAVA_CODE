//Method 1
import java.util.*;
public class Test
{
	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
       	  int n=sc.nextInt();
	  if(n<1)
  	  {
 	     System.out.println("Invalid Choice");
 	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
   	    arr[i]=sc.nextInt();
	
	  System.out.println("Repeating Element is :"+findDuplicate(arr));
    }
	
    public static int findDuplicate(int[]arr)
    {
      int n=arr.length,res=-1;
      for(int i=0;i<n;i++)
        for(int j=i+1;j<n;j++)
           if(arr[i]==arr[j])
           {
             res=arr[i];
             break;
           }
            
      return res;
    }
}

//Method 2

import java.util.*;
public class Test
{
	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
       	  int n=sc.nextInt();
	  if(n<1)
  	  {
 	     System.out.println("Invalid Choice");
 	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
   	    arr[i]=sc.nextInt();
	
	  System.out.println("Repeating Element is :"+findDuplicate(arr));
    }
	
    public static int findDuplicate(int[]arr)
    {
      HashMap<Integer,Integer>hm=new HashMap<>();
      int n=arr.length,res=-1;
        
      for(int i=0;i<n;i++)
       if(hm.containsKey(arr[i]))
         hm.put(arr[i],hm.get(arr[i])+1);
       else
         hm.put(arr[i],1);
        
       for(int key:hm.keySet())
          if(hm.get(key)>=2)
          {
            res=key;
            break;
          }
        
       return res;
    }
}

//Method 3

import java.util.*;
public class Test
{
   	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
       	  int n=sc.nextInt();
	  if(n<1)
  	  {
 	     System.out.println("Invalid Choice");
 	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
   	    arr[i]=sc.nextInt();
	
	  System.out.println("Repeating Element is :"+findDuplicate(arr));
    }
	
  public static int findDuplicate(int[]arr)
  {
      int n=arr.length,res=-1;
      int[] count=new int[n];
      
      for(int i=0;i<n;i++)
         count[arr[i]-1]++;
      
      for(int i=0;i<n;i++)
        if(count[i]>=2)
        {
           res=i+1;
           break;
        }
             
       return res;
  }
}

//Method 4

import java.util.*;
public class Test
{
     public static void main(String[] args) {
	 Scanner sc=new Scanner(System.in);
	 System.out.println("Enter the Size of the Array :");
         int n=sc.nextInt();
         if(n<1)
         {
           System.out.println("Invalid Choice");
           return;
	 }
	 int[] arr=new int[n];
         System.out.printf("Enter %d Elements Of The Array :\n",n);
         for(int i=0;i<n;i++)
           arr[i]=sc.nextInt();
	
	 System.out.println("Repeating Element is :"+findDuplicate(arr));
  }
	
  public static int findDuplicate(int[]arr)
  {
      HashSet<Integer>hs=new HashSet<>();
      int n=arr.length,res=-1;
        
      for(int i=0;i<n;i++)
       if(hs.contains(arr[i]))
       {
          res=arr[i];
          break;
       }
       else
         hs.add(arr[i]);
        
       return res;
  }
}

//Method 5

import java.util.*;
public class Test
{
   	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
       	  int n=sc.nextInt();
	  if(n<1)
  	  {
 	     System.out.println("Invalid Choice");
 	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
   	    arr[i]=sc.nextInt();
	
	  System.out.println("Repeating Element is :"+findDuplicate(arr));
    }
	
  public static int findDuplicate(int[]arr)
  {
      int n=arr.length,res=-1;
      int[] count=new int[n];
      
      for(int i=0;i<n;i++)
      {
        if(count[arr[i]-1]==1)
        {
           res=arr[i];
           break;
        }
        count[arr[i]-1]++;  
      }
        
      return res;
  }
}

//Method 6

import java.util.*;
public class Test
{
   	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
       	  int n=sc.nextInt();
	  if(n<1)
  	  {
 	     System.out.println("Invalid Choice");
 	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
   	    arr[i]=sc.nextInt();
	
	  System.out.println("Repeating Element is :"+findDuplicate(arr));
    }
	
  public static int findDuplicate(int[]arr)
  {
      Arrays.sort(arr);
      int n=arr.length,res=-1;
      for(int i=0;i<n-1;i++)
         if(arr[i]==arr[i+1])
         {
            res=arr[i];
            break;
         }         
      return res;
  }
}

//Method 7

import java.util.*;
public class Test
{
    	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
       	  int n=sc.nextInt();
	  if(n<1)
  	  {
 	     System.out.println("Invalid Choice");
 	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
   	    arr[i]=sc.nextInt();
	
	  System.out.println("Repeating Element is :"+findDuplicate(arr));
    }
	
    public static int findDuplicate(int[]arr)
    {
      Arrays.sort(arr);
      int n=arr.length,res=-1;
      for(int i=0;i<n;i++)
        if(areFirstAndLastIndexEqual(arr,arr[i])==false)
        {
            res=arr[i];
            break;
        }
        
      return res;
    }
    
    public static boolean areFirstAndLastIndexEqual(int [] arr,int key)
    {
        int first=firstIndex(arr,key);
        int last=lastIndex(arr,key);
        if(first!=last)
          return false;
        else
          return true;
    }
	
	
   public static int firstIndex(int[]arr,int key)
   {
      int low=0;
      int high=arr.length-1;
      int first=-1;
      while(low<=high)
      {
          int mid=(low+high)/2;
          if(arr[mid]==key)
          {
             first=mid;
             high=mid-1;
          }
          else if(key<arr[mid])
            high=mid-1;
          else if(key>arr[mid])
            low=mid+1;
      }
      return first;
   }
   
   
   public static int lastIndex(int[]arr,int key)
   {
      int low=0;
      int high=arr.length-1;
      int last=-1;
      while(low<=high)
      {
          int mid=(low+high)/2;
          if(arr[mid]==key)
          {
             last=mid;
             low=mid+1;
          }
          else if(key<arr[mid])
            high=mid-1;
          else if(key>arr[mid])
            low=mid+1;
      }
      return last;
   }
}

//Method 8

import java.util.*;
public class Test
{
   	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
       	  int n=sc.nextInt();
	  if(n<1)
  	  {
 	     System.out.println("Invalid Choice");
 	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
   	    arr[i]=sc.nextInt();
	
	  System.out.println("Repeating Element is :"+findDuplicate(arr));
    }
	
    public static int findDuplicate(int[]arr)
    {
      int n=arr.length,res=-1;
      int[] count=new int[n];
      for(int i=0;i<n;i++)
      {
         int ele=arr[i];
         int idx=ele-1;
         if(count[idx]==-1)
         {
           res=ele;
           break;
         }
         count[idx]=-1;
      }
      return res;
    }
}

//Method 9

import java.util.*;
public class Test
{
   	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
       	  int n=sc.nextInt();
	  if(n<1)
  	  {
 	     System.out.println("Invalid Choice");
 	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
   	    arr[i]=sc.nextInt();
	
	  System.out.println("Repeating Element is :"+findDuplicate(arr));
    }
	
  public static int findDuplicate(int[]arr)
  {
      int n=arr.length,res=-1;
      for(int i=0;i<n;i++)
      {
         int ele=Math.abs(arr[i]);
         int idx=ele-1;
	 
         if(arr[idx]<0)
         {
           res=ele;
           break;
         }
	 arr[idx]*=-1;
      }
      return res;
  }
}

//Method 10


