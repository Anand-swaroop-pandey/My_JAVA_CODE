//Bruteforce Approach
import java.util.*;
public class Test
{
     public static void main(String[] args) {
         Scanner sc=new Scanner(System.in);
         System.out.println("Enter the Size of the Array");
         int n=sc.nextInt();
         if(n>0)
         {
            int[] arr=new int[n];
           System.out.printf("Enter %d Elements of Array:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
           
           System.out.println("Enter Target Value:");
           int target=sc.nextInt();
           
           int[] res=twoSum(arr,n,target);
           System.out.println("Indexes are :"+res[0]+" , "+res[1]); 
         }
         else
            System.out.println("Invalid Choice");
	}
       
        public static int[] twoSum(int[] arr,int n,int target)
	{
          int[]res=new int[2];
          for(int i=0;i<n;i++)
            for(int j=i+1;j<n;j++)
              if((arr[i]+arr[j])==target)
              {
                res[0]=i;
                res[1]=j;
                break;
              }

          return res; 
	}
}


//Better Approach
import java.util.*;
public class Test
{
     public static void main(String[] args) {
         Scanner sc=new Scanner(System.in);
         System.out.println("Enter the Size of the Array");
         int n=sc.nextInt();
         if(n>0)
         {
            int[] arr=new int[n];
           System.out.printf("Enter %d Elements of Array:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
           
           System.out.println("Enter Target Value:");
           int target=sc.nextInt();
           
           int[] res=twoSum(arr,n,target);
           System.out.println("Indexes are :"+res[0]+" , "+res[1]); 
         }
         else
            System.out.println("Invalid Choice");
	}
       
        public static int[] twoSum(int[] arr,int n,int target)
	{
           int[]res=new int[2];
           int[] temp=new int[n];
           for(int i=0;i<n;i++)
             temp[i]=arr[i];
        
           Arrays.sort(arr);
           int i=0,j=(n-1),num1=Integer.MAX_VALUE,num2=Integer.MAX_VALUE;
           while(i<j)
             if((arr[i]+arr[j])==target)
             {
                num1=arr[i];
                num2=arr[j];
                break;
             }
             else if((arr[i]+arr[j])<target)
               i++;
             else
               j--;
        
        
            for(int k=0;k<n;k++)
              if(num1==temp[k])
              {
                res[0]=k;
                break;
              }
         
            for(int k=0;k<n;k++)
              if(k!=res[0] && num2==temp[k])
              {
                res[1]=k;
                break;
              }

          return res; 
	}
}


//Optimal Approach
import java.util.*;
public class Test
{
     public static void main(String[] args) {
         Scanner sc=new Scanner(System.in);
         System.out.println("Enter the Size of the Array");
         int n=sc.nextInt();
         if(n>0)
         {
            int[] arr=new int[n];
           System.out.printf("Enter %d Elements of Array:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
           
           System.out.println("Enter Target Value:");
           int target=sc.nextInt();
           
	   int[] res=twoSum(arr,n,target);
           System.out.println("Indexes are :"+res[0]+" , "+res[1]); 
         }
         else
            System.out.println("Invalid Choice");
     }
       
    public static int[] twoSum(int[] arr,int n,int target)
    {  
       int[]res=new int[2];
       HashMap<Integer,Integer>hm=new HashMap<>(n);
       for(int i=0;i<n;i++)
       {
         if(hm.containsKey(target-arr[i]))
         {
            res[0]=hm.get(target-arr[i]);
            res[1]=i;
            break;
         }
         hm.put(arr[i],i);
       }
       
       return res;
    }
}
