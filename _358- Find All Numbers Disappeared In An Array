//Bruteforce Approach
import java.util.*;
public class Test
{
	public static void main(String[] args){
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
	  int n=sc.nextInt();
	  if(n<1)
	  {
	     System.out.println("Invalid Choice");
	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements of the Array in the Range: [1,%d] :\n",n,n);
	  for(int i=0;i<n;i++)
	    arr[i]=sc.nextInt();
	  
	  System.out.printf("An Array Of All The Integers In The Range [1, %d] That Do Not Appear In Nums :\n",n);
	  System.out.println(findDisappearedNumbers(arr));
	}
	
	public static List<Integer>findDisappearedNumbers(int[] arr)
	{
	   List<Integer>al=new ArrayList<>();
           int n=arr.length;
	   for(int i=1;i<=n;i++)
             if(linearSearch(arr,n,i)==false)
               al.add(i);
	       
	   return al;
	}
	
        public static boolean linearSearch(int[] arr,int n,int key)
	{
	   for(int i=0;i<n;i++)
             if(arr[i]==key)
               return true;
	     
	   return false;
	}
}


//Improved Approach
import java.util.*;
public class Test
{
	public static void main(String[] args){
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
	  int n=sc.nextInt();
	  if(n<1)
	  {
	     System.out.println("Invalid Choice");
	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements of the Array in the Range: [1,%d] :\n",n,n);
	  for(int i=0;i<n;i++)
	    arr[i]=sc.nextInt();
	  
	  System.out.printf("An Array Of All The Integers In The Range [1, %d] That Do Not Appear In Nums :\n",n);
	  System.out.println(findDisappearedNumbers(arr));
	}
	
	public static List<Integer>findDisappearedNumbers(int[] arr)
	{
          HashSet<Integer>hs=new HashSet<>();
          for(int val:arr)
            hs.add(val);
        
          List<Integer>al=new ArrayList<>();
          int n=arr.length;
          for(int i=1;i<=n;i++)
            if(hs.contains(i)==false)
              al.add(i);
        
          return al;
	}
}


//Better Approach
import java.util.*;
public class Test
{
	public static void main(String[] args){
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
	  int n=sc.nextInt();
	  if(n<1)
	  {
	     System.out.println("Invalid Choice");
	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements of the Array in the Range: [1,%d] :\n",n,n);
	  for(int i=0;i<n;i++)
	    arr[i]=sc.nextInt();
	  
	  System.out.printf("An Array Of All The Integers In The Range [1, %d] That Do Not Appear In Nums :\n",n);
	  System.out.println(findDisappearedNumbers(arr));
	}
	
	public static List<Integer>findDisappearedNumbers(int[] arr)
	{
           int n=arr.length;
           int[] count=new int[n];
        
	   for(int i=0;i<n;i++)
	   {
	     int ele=arr[i];
	     int idx=ele-1;
	     if(count[idx]==0)
	       count[idx]=-1;
	   }
	   
	   List<Integer>al=new ArrayList<>();
	   for(int i=0;i<n;i++)
	     if(count[i]==0)
	       al.add(i+1);
	   
	   return al;
	}
}


//Optimal Approach

/*
For each value in the array mark its presence by making the number negative at that place in array
eg. if you hae array [3,1,4,1] for 3, i will go to index 2 and make its value negative ie. now nums[2] becomes -4. present array: [3,1,-4,1]
for 1, i will go to index 0 and make its value negative ie. now nums[0] becomes -3. present array: [-3,1,-4,1]
for 4, (take abs value), i will go to index 3 and make its value negative ie. now nums[3] becomes -1. present array: [-3,1,-4,-1]
for 1 take abs value), i will go to index 0 as it is already -ve do nothing. present array: [-3,1,-4,-1]
At last I will have [-3,1,-4,-1]. now i will iterate over the array, whichever idx has positive value that number will not be in the array so as we have nums[1]>0 so 2 is not in the list.
*/
import java.util.*;
public class Test
{
	public static void main(String[] args){
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
	  int n=sc.nextInt();
	  if(n<1)
	  {
	     System.out.println("Invalid Choice");
	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements of the Array in the Range: [1,%d] :\n",n,n);
	  for(int i=0;i<n;i++)
	    arr[i]=sc.nextInt();
	  
	  System.out.printf("An Array Of All The Integers In The Range [1, %d] That Do Not Appear In Nums :\n",n);
	  System.out.println(findDisappearedNumbers(arr));
	}
	
	public static List<Integer>findDisappearedNumbers(int[] arr)
	{
	   int n=arr.length; 
	   for(int i=0;i<n;i++)
	   {
	     int orgVal=Math.abs(arr[i]);
	     int idx=orgVal-1;
	     if(arr[idx]>0)
	       arr[idx]*=-1;
	   }
	   
	   List<Integer>al=new ArrayList<>();
	   for(int i=0;i<n;i++)
	     if(arr[i]>0)
	       al.add(i+1);
	   
	   return al;
	}
}
