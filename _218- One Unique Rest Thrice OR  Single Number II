//Method 1
import java.util.*;
public class Test
{
	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
	  int n=sc.nextInt();
	  if(n<1)
	  {
  	     System.out.println("Invalid Choice");
	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	     
	  System.out.println("Element occurring once is: "+findSingle(arr));
    }
	
    public static int findSingle(int arr[])
    {
        int res=-1,n=arr.length;
	for(int i=0;i<n;i++)
	{
	    int j;
	    for(j=0;j<n;j++)
	       if(j!=i && arr[i]==arr[j])
	           break;
	              
	    if(j==n)
	    {
	       res=arr[i];
	       break;
	    }
	}
       return res;
    }
}        



//Method 2

import java.util.*;
public class Test
{
	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
	  int n=sc.nextInt();
	  if(n<1)
	  {
  	     System.out.println("Invalid Choice");
	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	     
	  System.out.println("Element occurring once is: "+findSingle(arr));
    }
	
    public static int findSingle(int arr[])
    {
        int res=-1,n=arr.length;
	int[] freqArr=new int[n];
	countFrequency(arr,n,freqArr);
	for(int i=0;i<n;i++)
	   if(freqArr[i]==1)
	   {
	      res=arr[i];
	      break;
	   }
	       
	return res;
    }
	
    public static void countFrequency(int[] arr,int n,int[] freqArr)
    {
        for(int i=0;i<n;i++)
        {
            if(freqArr[i]==-1)
              continue;
            
            int count=1;
            for(int j=i+1;j<n;j++)
               if(arr[i]==arr[j])
               {
                 freqArr[j]=-1;
                 count++;
               }
               
            freqArr[i]=count; 
        }
    }
} 


//Method 3

import java.util.*;
public class Test
{
	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
	  int n=sc.nextInt();
	  if(n<1)
	  {
  	     System.out.println("Invalid Choice");
	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	     
	  System.out.println("Element occurring once is: "+findSingle(arr));
    }
	
    public static int findSingle(int arr[])
    {
       int n=arr.length,res=-1;
       HashMap<Integer,Integer>hm=new HashMap<>(n);
       
        for(int i=0;i<n;i++)
          if(hm.containsKey(arr[i]))
             hm.put(arr[i],hm.get(arr[i])+1);
          else
             hm.put(arr[i],1);
       
        for(int key:hm.keySet()) 
          if(hm.get(key)==1)
          {
            res=key;
            break;
          }
	  
        return res;
    }
}  

//Method 4

import java.util.*;
public class Test
{
	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
	  int n=sc.nextInt();
	  if(n<1)
	  {
  	     System.out.println("Invalid Choice");
	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	     
	  System.out.println("Element occurring once is: "+findSingle(arr));
    }
	
    public static int findSingle(int arr[])
    {
       int n=arr.length;
       long arrSum=0,uniqueSum=0,res=-1;
       HashSet<Integer>hs=new HashSet<>(n);
       
       for(int i=0;i<n;i++)
       {
         hs.add(arr[i]);
         arrSum+=arr[i];
       }
         
       for(int val :hs)
         uniqueSum+=val;
         
       res=((3*uniqueSum)-arrSum)/2;
	  
       return (int)res;
    }
}   

//Method 5

import java.util.*;
public class Test
{
	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
	  int n=sc.nextInt();
	  if(n<1)
	  {
  	     System.out.println("Invalid Choice");
	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	     
	  System.out.println("Element occurring once is: "+findSingle(arr));
    }
	
    public static int findSingle(int arr[])
    {
       Arrays.sort(arr);
       int res=-1,n=arr.length;
       for(int i=0;i<n;i++)
       {   
	   if( i==(n-1) || arr[i]!=arr[i+1] )
	   {
	      res=arr[i];
	      break;
	   }
	       
	   while(i<(n-1) && arr[i]==arr[i+1])
	      i++;
       }
       return res;  
    }
}  

//Method 6 
import java.util.Scanner;
public class Test
{
   public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.println("Enter the Size of the Array :");
	int n=sc.nextInt();
	if(n<1)
	{
  	   System.out.println("Invalid Choice");
	   return;
	}
	int[] arr=new int[n];
	System.out.printf("Enter %d Elements Of The Array :\n",n);
	for(int i=0;i<n;i++)
	   arr[i]=sc.nextInt();
	     
	System.out.println("Element occurring once is: "+findSingle(arr));
   }
	
   public static int findUnique(int arr[])
   {
      int ans=0,count1,mask,n=arr.length;
      for(int i=0;i<32;i++)
      {
          count1=0;
	  mask=1<<i;
          for(int j=0;j<n;j++)
              if((arr[j]&mask)!=0)
                count1++;
		
          if((count1%3)==1)//3n+1 form so set ith bit of the answer
            ans=ans|mask;
      }
      return ans;
   }
}

//Method 7

import java.util.*;
public class Test
{
	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.println("Enter the Size of the Array :");
	  int n=sc.nextInt();
	  if(n<1)
	  {
  	     System.out.println("Invalid Choice");
	     return;
	  }
	  int[] arr=new int[n];
	  System.out.printf("Enter %d Elements Of The Array :\n",n);
	  for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	     
	  System.out.println("Element occurring once is: "+findSingle(arr));
    }
	
    public static int findSingle(int arr[])
    {
        int n=arr.length,counterOne = 0,counterTwo = 0;
        
        for (int i = 0; i < n; i++)
        {
            counterOne = (~counterTwo) & (counterOne ^ arr[i]);
            counterTwo = (~counterOne) & (counterTwo ^ arr[i]);
        }
        
        return counterOne;
    }
}        
