//Bruteforce
import java.util.Scanner;
public class Test
{
   public static void main(String[] args)
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
         {
            int[] arr=new int[n];
           System.out.printf("Enter %d Elements:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
           
           if(n>1)
             segregate0sAnd1s(arr);
           System.out.println("Segregated Array :");
           for(int i=0;i<n;i++)
              System.out.println(arr[i]);
         }
         else
            System.out.println("Invalid Choice");
   }
   
   public static void segregate0sAnd1s(int[]arr)
   {
       int n=arr.length;
       int k=0;
       int temp[]=new int[n];
             
       for(int i=0;i<n;i++)
          if(arr[i]==0)
             temp[k++]=arr[i];
       
       for(int i=0;i<n;i++)
          if(arr[i]==1)
             temp[k++]=arr[i];
             
       for(int i=0;i<n;i++)
         arr[i]=temp[i];
   }
}

//Improved Approach
import java.util.Scanner;
public class Test
{
   public static void main(String[] args)
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
         {
            int[] arr=new int[n];
           System.out.printf("Enter %d Elements:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();

           if(n>1)
            segregate0sAnd1s(arr);
             System.out.println("Segregated Array :");
             for(int i=0;i<n;i++)
                System.out.println(arr[i]);
         }
         else
            System.out.println("Invalid Choice");
   }
  
   public static void segregate0sAnd1s(int[]arr)
   {
      int count0=0;
      for(int i=0;i<arr.length;i++)
         if(arr[i]==0)
            count0++;
      for(int i=0;i<count0;i++)
          arr[i]=0;
       for(int i=count0;i<arr.length;i++)
          arr[i]=1;
   }
}

//Better Approach

import java.util.Scanner;
public class Test
{
   public static void main(String[] args)
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
         {
            int[] arr=new int[n];
           System.out.printf("Enter %d Elements:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
           
           if(n>1)
             segregate0sAnd1s(arr);
             System.out.println("Segregated Array :");
             for(int i=0;i<n;i++)
                System.out.println(arr[i]);
         }
         else
            System.out.println("Invalid Choice");
   }
   
    public static void segregate0sAnd1s(int[]arr)
   {
      int n=arr.length;
      int start=0;
      int end=(n-1);
      
      while(start<end)
      {
          while(start<n && arr[start]==0)
            start++;
            
          while(end>=0 && arr[end]==1)
            end--;
            
           if(start<end)
            {
                swap(arr,start,end);
                start++;
                end--;
            }
       }
    } 
    
   public static void swap(int[]arr,int start,int end)
   {
      int temp=arr[start];
      arr[start]=arr[end];
      arr[end]=temp;
   }
}


//Optimal Approach
import java.util.Scanner;
public class Test
{
   public static void main(String[] args)
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
         {
            int[] arr=new int[n];
           System.out.printf("Enter %d Elements:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();
           
           if(n>1)
             segregate0sAnd1s(arr);
             System.out.println("Segregated Array :");
             for(int i=0;i<n;i++)
                System.out.println(arr[i]);
         }
         else
            System.out.println("Invalid Choice");
   }
   
   public static void segregate0sAnd1s(int[]arr)
   {
       int n=arr.length;
       int i=0;
       int j=0;
       while(i<n)
       {
          if(arr[i]==0)
          {
             swap(arr,i,j);
             j++;
          }
          i++;
       }
   }
   
    public static void swap(int[]arr,int i,int j)
   {
       int temp=arr[i];
       arr[i]=arr[j];
       arr[j]=temp;
   }
}
