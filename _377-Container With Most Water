//Bruteforce Approach
import java.util.*;
public class Test
{
	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
          System.out.println("Enter the size of the array");
	  int n=sc.nextInt();
	  if(n<1)
	  {
	     System.out.println("Invalid Choice");
	     return;
	  }
		
	  int[] arr=new int[n];
	  System.out.println("Enter "+n+" Elements");
	  for(int i=0;i<n;i++)
	    arr[i]=sc.nextInt();
	    
	  System.out.println("Maximum amount of water a container can store is"+maxArea(arr,n));
	}
	
	public static int maxArea(int[]arr,int n)
	{
	  int maxArea=0,currArea,breadth,height;
	    
          for(int i=0;i<(n-1);i++)
            for(int j=i+1;j<n;j++)
            {
              breadth=j-i;
              height=Math.min(arr[i],arr[j]);
              currArea=breadth*height;
            
              maxArea=Math.max(currArea,maxArea);
            }
	    
	    return maxArea;
	}
}



//Optimal Approach
import java.util.*;
public class Test
{
	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
          System.out.println("Enter the size of the array");
	  int n=sc.nextInt();
	  if(n<1)
	  {
	     System.out.println("Invalid Choice");
	     return;
	  }
		
	  int[] arr=new int[n];
	  System.out.println("Enter "+n+" Elements");
	  for(int i=0;i<n;i++)
	    arr[i]=sc.nextInt();
	    
	  System.out.println("Maximum amount of water a container can store is"+maxArea(arr,n));
	}
	
	public static int maxArea(int[]arr,int n)
	{
	    int left=0,right=n-1,maxArea=0,currArea,breadth,height;
	    
	    while(left<right)
	    {
	      breadth=right-left;
	      height=Math.min(arr[left],arr[right]);
	      currArea=breadth*height;
	      maxArea=Math.max(maxArea,currArea);
	      
	      if(arr[left]<arr[right])
	        left++;
	      else if(arr[right]<arr[left])
	        right--;
	      else //arr[left]==arr[right]
	      {
	        left++;
	        right--;
	      }
	    }
	    
	    return maxArea;
	}
}

/*
We know that water container is a rectangle so area will be simply l(height)xb(breadth) = area so either we need to increase the length or the breadth to maximise the area . 
Placing the pointer at two ends creates maximises the breadth 
now the interesting part if you move any of the two pointer then you are reducing the breadth so to balance it you must increase the height. 
There are two pointer pointing to two different height now obviously we need to move that pointer which has less height among the two
*/
