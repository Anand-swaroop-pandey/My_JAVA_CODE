//Bruteforce Approach
import java.util.Scanner;
public class Test
{
       public static void main(String[] args) {
           Scanner sc=new Scanner(System.in);
           System.out.println("Enter the Size of the Array1");
           int m=sc.nextInt();
       
           System.out.println("Enter the Size of the Array2");
           int n=sc.nextInt();
           if(m>0 && n>0)
           {
             int[] arr1=new int[m];
             int[] arr2=new int[n];
             System.out.printf("Enter %d Elements of Array1:\n",m);
             for(int i=0;i<m;i++)
               arr1[i]=sc.nextInt();
              
             System.out.printf("Enter %d Elements of Array2:\n",n);
             for(int i=0;i<n;i++)
               arr2[i]=sc.nextInt();
              
             System.out.println("Median Of Two Sorted Array is :"+medianOfTwoSortedArray(arr1,m,arr2,n));
           }
           else
             System.out.println("Invalid Choice");
        }
	
	
	public static float medianOfTwoSortedArray(int[]arr1,int m,int[]arr2,int n)
	{
	    int len=m+n;
	    int[] arr=new int[len];
	    mergeTwoSortedArrayIntoThirdSortedArray(arr1,m,arr2,n,arr);
	    if((len%2)==0)
              return (float)(arr[(len-1)/2]+arr[len/2])/(float)2;
            else
              return (float)arr[len/2];
	}
	
	public static void mergeTwoSortedArrayIntoThirdSortedArray(int[]arr1,int m,int[]arr2,int n,int[] arr)
	{
	     int i=0,j=0,k=0;
	     while(i<m && j<n)
	       if(arr1[i]<=arr2[j])
	         arr[k++]=arr1[i++];
	       else
	         arr[k++]=arr2[j++];
           
	     while(i<m)
	       arr[k++]=arr1[i++];
	        
	     while(j<n)
	       arr[k++]=arr2[j++];
	}
}

//Improved Approach
import java.util.Scanner;
public class Test
{
       public static void main(String[] args) {
          Scanner sc=new Scanner(System.in);
          System.out.println("Enter the Size of the Array1");
          int m=sc.nextInt();
       
          System.out.println("Enter the Size of the Array2");
          int n=sc.nextInt();
          if(m>0 && n>0)
          {
            int[] arr1=new int[m];
            int[] arr2=new int[n];
            System.out.printf("Enter %d Elements of Array1:\n",m);
            for(int i=0;i<m;i++)
               arr1[i]=sc.nextInt();
              
            System.out.printf("Enter %d Elements of Array2:\n",n);
            for(int i=0;i<n;i++)
               arr2[i]=sc.nextInt();
              
            System.out.println("Median Of Two Sorted Array is :"+medianOfTwoSortedArray(arr1,m,arr2,n));
          }
          else
            System.out.println("Invalid Choice");
        }
	
	
	public static float medianOfTwoSortedArray(int[]arr1,int m,int[]arr2,int n)
	{
	    int i=0,j=0,k=0,len=m+n;
	    int[] arr=new int[len];
	   
            while(k<=(len/2))
              if(i<m && j<n)
              {
                if(arr1[i]<=arr2[j])
	           arr[k++]=arr1[i++];
	        else
	           arr[k++]=arr2[j++];  
              }
              else if(j<n)
	              arr[k++]=arr2[j++];
              else if(i<m)
	              arr[k++]=arr1[i++];
	
	    if(len%2!=0)
	      return (float)arr[k-1]; // return (float)arr[len/2];
	    else	      
              return (float)(arr[k-1]+arr[k-2])/2; // return (float)(arr[len/2]+arr[(len-1)/2])/2;
	}
}


//Better Approach
import java.util.Scanner;
public class Test
{
	public static void main(String[] args) {
          Scanner sc=new Scanner(System.in);
          System.out.println("Enter the Size of the Array1");
          int m=sc.nextInt();
       
          System.out.println("Enter the Size of the Array2");
          int n=sc.nextInt();
          if(m>0 && n>0)
          {
            int[] arr1=new int[m];
            int[] arr2=new int[n];
            System.out.printf("Enter %d Elements of Array1:\n",m);
            for(int i=0;i<m;i++)
              arr1[i]=sc.nextInt();
              
            System.out.printf("Enter %d Elements of Array2:\n",n);
            for(int i=0;i<n;i++)
              arr2[i]=sc.nextInt();
              
            System.out.println("Median Of Two Sorted Array is :"+medianOfTwoSortedArray(arr1,m,arr2,n));
          }
          else
            System.out.println("Invalid Choice");
	}
	
	
	public static float medianOfTwoSortedArray(int[]arr1,int m,int[]arr2,int n)
	{
	    int i=0,j=0,len=m+n;
	    if((len%2)!=0)
            {
               int currVal=-1;
               for(int k=0;k<=(len/2);k++)
                  if(i<m && j<n)
                  {
                       if(arr1[i]<=arr2[j])
	                 currVal=arr1[i++];
	               else
	                 currVal=arr2[j++];  
                  }
                  else if(i<m)
	            currVal=arr1[i++];
	          else if(j<n)
	            currVal=arr2[j++];
        
               return (float)currVal; 
            }
            else
            {
               int currVal=-1,prevVal=-1;
               for(int k=0;k<=(len/2);k++)
	       {
	          prevVal=currVal;
                  if(i<m && j<n)
                  {
                     if(arr1[i]<=arr2[j])
	               currVal=arr1[i++];
	             else
	               currVal=arr2[j++];  
                  }
                  else if(i<m)
	             currVal=arr1[i++];
	          else if(j<n)
	             currVal=arr2[j++];
	       }
            
              return (float)(currVal+prevVal)/(float)2;
	    }
	}
}

//Optimal Approach (Using Binary Search) 

import java.util.Scanner;
public class Test
{
	public static void main(String[] args) {
          Scanner sc=new Scanner(System.in);
          System.out.println("Enter the Size of the Array1");
          int m=sc.nextInt();
       
          System.out.println("Enter the Size of the Array2");
          int n=sc.nextInt();
          if(m>0 && n>0)
          {
            int[] arr1=new int[m];
            int[] arr2=new int[n];
            System.out.printf("Enter %d Elements of Array1:\n",m);
            for(int i=0;i<m;i++)
              arr1[i]=sc.nextInt();
              
            System.out.printf("Enter %d Elements of Array2:\n",n);
            for(int i=0;i<n;i++)
              arr2[i]=sc.nextInt();
              
            System.out.println("Median Of Two Sorted Array is :"+medianOfTwoSortedArray(arr1,m,arr2,n));
          }
          else
            System.out.println("Invalid Choice");
      }
	
	
      public static double medianOfTwoSortedArray(int[]arr1,int m,int[]arr2,int n)
      {
	  if(m>n)
           return medianOfTwoSortedArray(arr2,n,arr1,m);//ensuring that binary search happens on minimum size array
    
    
         int low=0,high=m;
         
         if((m+n)%2==0)
         {
            while(low<=high) 
            {
              int cut1 = (low+high)/2;
              int cut2 = ((m+n)/2)-cut1;
        
              int l1 = (cut1 == 0)? Integer.MIN_VALUE:arr1[cut1-1];
              int l2 = (cut2 == 0)? Integer.MIN_VALUE:arr2[cut2-1];
              int r1 = (cut1 == m)? Integer.MAX_VALUE:arr1[cut1];
              int r2 = (cut2 == n)? Integer.MAX_VALUE:arr2[cut2];
        
              if(l1<=r2 && l2<=r1)
                return (Math.max(l1,l2)+Math.min(r1,r2))/2.0;  
              else if(l1>r2)
                high = cut1-1;
              else if(l2>r1)
                low = cut1+1;
            }
         }
         else
         {
            while(low<=high) 
            {
              int cut1 = (low+high)/2;
              int cut2 = ((m+n+1)/2)-cut1;
        
              int l1 = (cut1 == 0)? Integer.MIN_VALUE:arr1[cut1-1];
              int l2 = (cut2 == 0)? Integer.MIN_VALUE:arr2[cut2-1];
              int r1 = (cut1 == m)? Integer.MAX_VALUE:arr1[cut1];
              int r2 = (cut2 == n)? Integer.MAX_VALUE:arr2[cut2];
        
              if(l1<=r2 && l2<=r1)
                return Math.max(l1,l2);
              else if(l1>r2)
                high = cut1-1;
              else if(l2>r1)
                low = cut1+1;
            } 
         }
      }
}
