//Bruteforce Approach
import java.util.*;
public class Test
{
    public static void main(String[] args)
    {
	   System.out.println("Enter the Size of the Array:");
	   Scanner sc=new Scanner(System.in);
	   int n=sc.nextInt();
	   int[] arr=new int[n];
           System.out.printf("Enter %d of the Array:\n",n);
	   for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	   int[]res=RepeatingAndTheMissing(arr);
	   System.out.printf("Repeating : %d  and  Missing : %d",res[0],res[1]);
    }
		
    public static int[] RepeatingAndTheMissing(int arr[])
    {
       Arrays.sort(arr);
       int repeat=0,missing=0,n=arr.length;
        
       for(int i=0;i<n;i++)
         if(arr[i]==arr[i+1])
         {
           repeat=arr[i];
           break;
         }
        
       for(int i=1;i<=n;i++)
         if(binarySearch(arr,i)==false)
         {
            missing=i;
            break;
         }
        
        int[] res=new int[2];
        res[0]=repeat;
        res[1]=missing;
        
        return res;
    }
    
    public static boolean binarySearch(int[] arr,int key)
    {
        int low=0,high=arr.length-1;
        while(low<=high)
        {
           int mid=(low+high)/2; 
           if(arr[mid]==key)
             return true;
           else if(key>arr[mid])
             low=mid+1;
           else if(key<arr[mid])
              high=mid-1;
        }
        return false;
    }
}

//Improved Approach
import java.util.*;
public class Test
{
    public static void main(String[] args)
    {
	   System.out.println("Enter the Size of the Array:");
	   Scanner sc=new Scanner(System.in);
	   int n=sc.nextInt();
	   int[] arr=new int[n];
           System.out.printf("Enter %d of the Array:\n",n);
	   for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	   int[]res=RepeatingAndTheMissing(arr);
	   System.out.printf("Repeating : %d  and  Missing : %d",res[0],res[1]);
    }
		
    public static int[] RepeatingAndTheMissing(int arr[])
    {
       int n=arr.length;
       int[]count=new int[n+1];
       for(int i=0;i<n;i++)
           count[arr[i]]++;
       
       int repeat=0,missing=0;
       for(int i=1;i<(n+1);i++)
       {
           if(count[i]==2)
             repeat=i;
           else if(count[i]==0)
             missing=i;
           
           if(repeat!=0 && missing!=0)
             break;
       }
        
        int[] res=new int[2];
        res[0]=repeat;
        res[1]=missing;
        
        return res;
    }
}

//Better Approach
import java.util.*;
public class Test
{
    public static void main(String[] args)
    {
	   System.out.println("Enter the Size of the Array:");
	   Scanner sc=new Scanner(System.in);
	   int n=sc.nextInt();
	   int[] arr=new int[n];
           System.out.printf("Enter %d of the Array:\n",n);
	   for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	   int[]res=RepeatingAndTheMissing(arr);
	   System.out.printf("Repeating : %d  and  Missing : %d",res[0],res[1]);
    }
		
    public static int[] RepeatingAndTheMissing(int arr[])
    {
       int n=arr.length,repeating=0,missing=0;
       HashMap<Integer,Integer>hm=new HashMap<>();
       for(int i=0;i<n;i++)
         if(hm.containsKey(arr[i]))
           hm.put(arr[i],hm.get(arr[i])+1);
         else
           hm.put(arr[i],1);
       
       for(int i=0;i<n;i++)
         if(hm.get(arr[i])==2)
         {
            repeating=arr[i];
            break;
         }
       
       for(int i=1;i<=n;i++)
         if(hm.containsKey(i)==false)
         {
            missing=i;
            break;
         }
        
        int[] res=new int[2];
        res[0]=repeating;
        res[1]=missing;
        
        return res;
    }
}

//Even Better Approach
import java.util.*;
public class Test
{
    public static void main(String[] args)
    {
	   System.out.println("Enter the Size of the Array:");
	   Scanner sc=new Scanner(System.in);
	   int n=sc.nextInt();
	   int[] arr=new int[n];
           System.out.printf("Enter %d of the Array:\n",n);
	   for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	   int[]res=RepeatingAndTheMissing(arr);
	   System.out.printf("Repeating : %d  and  Missing : %d",res[0],res[1]);
    }
		
    public static int[] RepeatingAndTheMissing(int arr[])
    {
       int n=arr.length,repeating=0,missing=0;
       HashMap<Integer,Integer>hm=new HashMap<>();
       for(int i=1;i<=n;i++)
          hm.put(i,0);
       
       for(int i=0;i<n;i++)
         hm.put(arr[i],hm.get(arr[i])+1);
       

       for(int key:hm.keySet())
         if(hm.get(key)==2)
           repeating=key;
         else if(hm.get(key)==0)
           missing=key;
        
        int[] res=new int[2];
        res[0]=repeating;
        res[1]=missing;
        
        return res;
    }
}

//Best Approach
import java.util.*;
public class Test
{
    public static void main(String[] args)
    {
	   System.out.println("Enter the Size of the Array:");
	   Scanner sc=new Scanner(System.in);
	   int n=sc.nextInt();
	   int[] arr=new int[n];
           System.out.printf("Enter %d of the Array:\n",n);
	   for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	   int[]res=RepeatingAndTheMissing(arr);
	   System.out.printf("Repeating : %d  and  Missing : %d",res[0],res[1]);
    }
		
    public static int[] RepeatingAndTheMissing(int arr[])
    {
       int n=arr.length,i=0,repeating=0,missing=0;
          while(i<n)
          {
             int correctIndex=arr[i]-1;
             if(arr[correctIndex]==arr[i])
	            i++;
	         else //if arr[i] is not at its correct index
             {
               int temp=arr[correctIndex];
               arr[correctIndex]=arr[i];
               arr[i]=temp;
             }      
           }  
        
           List<Integer>al=new ArrayList<>();
           for (i=0; i<n; i++) 
             if(arr[i]!=i+1)
             {
               repeating=arr[i];
               missing=i+1;
               break;
             }
           
        int[] res=new int[2];
        res[0]=repeating;
        res[1]=missing;
        
        return res;
    }
}


//Optimal Approach
import java.util.*;
public class Test
{
    public static void main(String[] args)
    {
	   System.out.println("Enter the Size of the Array:");
	   Scanner sc=new Scanner(System.in);
	   int n=sc.nextInt();
	   int[] arr=new int[n];
           System.out.printf("Enter %d of the Array:\n",n);
	   for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	   int[]res=RepeatingAndTheMissing(arr);
	   System.out.printf("Repeating : %d  and  Missing : %d",res[0],res[1]);
    }
		
    public static int[] RepeatingAndTheMissing(int arr[])
    {
          int n=arr.length,repeating=0,missing=0;
          int xXory=0;
          for(int i=1;i<=n;i++)
             xXory=xXory^i;
             
          for(int val:arr)
             xXory=xXory^val;
             
          int rmsbm=rMSBM(xXory);
          
          int x=0,y=0;
          for(int val:arr)
            if((val & rmsbm)==0)
               x=x^val;
            else
               y=y^val;
          
          for(int i=1;i<=n;i++)
            if((i & rmsbm)==0)
               x=x^i;
            else
               y=y^i;
          
          for(int i=0;i<n;i++)
            if(arr[i]==x)
            {
                repeating=x;
                missing=y;
                break;
                
            }
            else if(arr[i]==y)
            {
                repeating=y;
                missing=x;
                break;
            }
       
        int[] res=new int[2];
        res[0]=repeating;
        res[1]=missing;
        
        return res;
    }
    
   public static int rMSBM(int n)
   {
       int rsbm= n & twosCompliment(n);
       return rsbm;
   }
		
   public static int twosCompliment(int n)
   {
       return -n;//(~n+1);
   }
}
