//Bruteforce Approach
import java.util.*;
public class Test
{
	public static void main(String[] args) {
	   Scanner sc=new Scanner(System.in);
           System.out.println("Enter the Size of the Array1");
           int m=sc.nextInt();
       
           System.out.println("Enter the Size of the Array2");
           int n=sc.nextInt();
           if(m>0 && n>0)
           {
              int[] arr1=new int[m];
              int[] arr2=new int[n];
              System.out.printf("Enter %d Elements of Array1:\n",m);
              for(int i=0;i<m;i++)
                 arr1[i]=sc.nextInt();
              
              System.out.printf("Enter %d Elements of Array2:\n",n);
              for(int i=0;i<n;i++)
                arr2[i]=sc.nextInt();
		
              System.out.print("Intersection of both the Arrays is: "+intersectionOfTwoSortedArray(arr1,arr2));  
           }
           else
              System.out.println("Invalid Choice");
        }
	
	public static List<Integer> intersectionOfTwoSortedArray(int[] arr1,int[] arr2)
	{
	   List<Integer>intersection=new ArrayList<>();
           for(int val :arr1)
             if(binarySearch(arr2,val))
               intersection.add(val);
        
           return intersection;
	}
	
        public static boolean binarySearch(int[]arr,int key)
        {
          int low=0,high=arr.length-1,mid;
          while(low<=high)
          {
            mid=(low+high)/2;
            if(arr[mid]==key)
              return true;
            else if(key<arr[mid])
              high=mid-1;
            else if(key>arr[mid])
              low=mid+1;
          }
          return false;//key doesnot exists
        }
}


//Better Approach
import java.util.*;
public class Test
{
	public static void main(String[] args) {
	   Scanner sc=new Scanner(System.in);
           System.out.println("Enter the Size of the Array1");
           int m=sc.nextInt();
       
           System.out.println("Enter the Size of the Array2");
           int n=sc.nextInt();
           if(m>0 && n>0)
           {
              int[] arr1=new int[m];
              int[] arr2=new int[n];
              System.out.printf("Enter %d Elements of Array1:\n",m);
              for(int i=0;i<m;i++)
                 arr1[i]=sc.nextInt();
              
              System.out.printf("Enter %d Elements of Array2:\n",n);
              for(int i=0;i<n;i++)
                arr2[i]=sc.nextInt();
		
              System.out.print("Intersection of both the Arrays is: "+intersectionOfTwoSortedArray(arr1,arr2));  
           }
           else
              System.out.println("Invalid Choice");
        }
	
	public static List<Integer> intersectionOfTwoSortedArray(int[] arr1,int[] arr2)
	{
	   List<Integer>intersection=new ArrayList<>();
	   HashSet<Integer>hs=new HashSet<>();
	   
	   for(int val :arr2)
	     hs.add(val);
	   
	   for(int val:arr1)
	     if(hs.contains(val))
	       intersection.add(val);
	   
	   return intersection;
	}
}


//Optimal Approach

import java.util.*;
public class Test
{
	public static void main(String[] args) {
	   Scanner sc=new Scanner(System.in);
           System.out.println("Enter the Size of the Array1");
           int m=sc.nextInt();
       
           System.out.println("Enter the Size of the Array2");
           int n=sc.nextInt();
           if(m>0 && n>0)
           {
              int[] arr1=new int[m];
              int[] arr2=new int[n];
              System.out.printf("Enter %d Elements of Array1:\n",m);
              for(int i=0;i<m;i++)
                 arr1[i]=sc.nextInt();
              
              System.out.printf("Enter %d Elements of Array2:\n",n);
              for(int i=0;i<n;i++)
                arr2[i]=sc.nextInt();
		
              System.out.print("Intersection of both the Arrays is: "+intersectionOfTwoSortedArray(arr1,arr2));  
           }
           else
              System.out.println("Invalid Choice");
        }
	
	public static List<Integer> intersectionOfTwoSortedArray(int[] arr1,int[] arr2)
	{
	   List<Integer>intersection=new ArrayList<>();
           int i=0,j=0,m=arr1.length,n=arr2.length,min;
           while(i<m && j<n)
             if(arr1[i]==arr2[j])
             {
               intersection.add(arr1[i]);
               i++;
               j++;
             }
             else
             {
               min=Math.min(arr1[i],arr2[j]);
               if(min==arr1[i])
                 i++;
               else if(min==arr2[j])
                 j++;
             }
	   
	   return intersection;
	}
}

