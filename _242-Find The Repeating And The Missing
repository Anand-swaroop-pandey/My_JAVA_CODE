//Bruteforce Approach
import java.util.*;
public class Test
{
    public static void main(String[] args)
    {
	   System.out.println("Enter the Size of the Array:");
	   Scanner sc=new Scanner(System.in);
	   int n=sc.nextInt();
	   int[] arr=new int[n];
           System.out.printf("Enter %d of the Array:\n",n);
	   for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	   RepeatingAndTheMissing(arr); 
    }
		
    public static void RepeatingAndTheMissing(int arr[])
    {
       int n=arr.length;
       Arrays.sort(arr);
       int repeat=0,missing=0;
       for(int i=0;i<n;i++)
         if(arr[i]==arr[i+1])
         {
           repeat=arr[i];
           break;
         }
       for(int i=1;i<=n;i++)
         if(binarySearch(arr,i)==false)
         {
            missing=i;
            break;
         }
       System.out.println("Repeating Number = "+repeat+"\nMissing Number = "+missing);
    }
    
    public static boolean binarySearch(int[] arr,int key)
    {
        int low=0,high=arr.length-1;
        while(low<=high)
        {
           int mid=(low+high)/2; 
           if(arr[mid]==key)
             return true;
           else if(key>arr[mid])
             low=mid+1;
           else if(key<arr[mid])
              high=mid-1;
        }
        return false;
    }
}

//Better Approach
import java.util.Scanner;
public class Test
{
    public static void main(String[] args)
    {
	   System.out.println("Enter the Size of the Array:");
	   Scanner sc=new Scanner(System.in);
	   int n=sc.nextInt();
	   int[] arr=new int[n];
           System.out.printf("Enter %d of the Array:\n",n);
	   for(int i=0;i<n;i++)
	     arr[i]=sc.nextInt();
	   RepeatingAndTheMissing(arr); 
    }
		
    public static void RepeatingAndTheMissing(int arr[])
    {
       int n=arr.length;
       int[]count=new int[n+1];
       for(int i=0;i<n;i++)
           count[arr[i]]++;
       
       int repeat=0,missing=0;
       for(int i=1;i<(n+1);i++)
       {
           if(count[i]==2)
             repeat=i;
           else if(count[i]==0)
             missing=i;
           
           if(repeat!=0 && missing!=0)
             break;
       }
       System.out.println("Repeating Number = "+repeat+"\nMissing Number = "+missing);
    }
}

//Optimal Approach
import java.util.Scanner;
public class Test
{
    public static void main(String[] args)
    {
	     System.out.println("Enter the Size of the Array:");
	     Scanner sc=new Scanner(System.in);
	     int n=sc.nextInt();
	     int[] arr=new int[n];
	     System.out.printf("Enter %d of the Array:\n",n);
	     for(int i=0;i<n;i++)
	       arr[i]=sc.nextInt();
	     RepeatingAndTheMissing(arr); 
    }
		
    public static void RepeatingAndTheMissing(int arr[])
    {
          int n=arr.length;
          int xXory=0;
          for(int i=1;i<=n;i++)
             xXory=xXory^i;
             
          for(int val:arr)
        	  xXory=xXory^val;
             
          int rmsbm=rMSBM(xXory);
          
          int x=0,y=0;
          for(int val:arr)
            if((val & rmsbm)==0)
               x=x^val;
            else
               y=y^val;
          
          for(int i=1;i<=n;i++)
            if((i & rmsbm)==0)
               x=x^i;
            else
               y=y^i;
          
          for(int i=0;i<n;i++)
            if(arr[i]==x)
            {
                System.out.println("Repeating Number = "+x+"\nMissing Number = "+y);
                break;
            }
            else if(arr[i]==y)
            {
                System.out.println("Repeating Number = "+y+"\nMissing Number = "+x);
                break;
            }
    }
	   
   public static int rMSBM(int n)
   {
       int rsbm= n & twosCompliment(n);
       return rsbm;
   }
		
    public static int twosCompliment(int n)
   {
       return -n;//(~n+1);
   }
}
