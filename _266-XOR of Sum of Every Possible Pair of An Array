//Bruteforce Approach
import java.util.Scanner;
public class Test
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    System.out.println("Enter the Size of the Array");
	    int n=sc.nextInt();
	    int[] arr=new int[n];
	    System.out.printf("Enter %d Elements:",n);
	    for(int i=0;i<n;i++)
	      arr[i]=sc.nextInt();
	    System.out.println("XOR of Sum of every possible pair of an array is "+findXor(arr));
	}
	public static int findXor(int[] arr)
	{
	    int n=arr.length;
	    int xor=0;
	    for(int i=0;i<n;i++)
	       for(int j=0;j<n;j++)
	         {
	             int pairSum=arr[i]+arr[j];
	             xor=xor^pairSum;
	         }
	    return xor;        
	}
}

//Optimal Approach
import java.util.Scanner;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    System.out.println("Enter the Size of the Array");
	    int n=sc.nextInt();
	    int[] arr=new int[n];
	    System.out.printf("Enter %d Elements:",n);
	    for(int i=0;i<n;i++)
	      arr[i]=sc.nextInt();
	    System.out.println("XOR of Sum of every possible pair of an array is "+findXor(arr));
	}
	public static int findXor(int[] arr)
	{
	    int n=arr.length;
	    int xor=0;
	    for(int i=0;i<n;i++)
	    {
	       int pairSum=2*arr[i];
	       xor=xor^pairSum;
	    }
	    return xor;        
	}
	
	/*
	  Ex-arr[]={1,2,5,3,9};
	  
	  (1,1)=>(1+1)=2                                           
	  (1,2)=>(1+2)=3
	  (1,5)=>(1+5)=6
	  (1,3)=>(1+3)=4
	  (1,9)=>(1+9)=10
	  
	  (2,1)=>(2+1)=3
	  (2,2)=>(2+2)=4
	  (2,5)=>(2+5)=7
	  (2,3)=>(2+3)=5
	  (2,9)=>(2+9)=11
	  
	  (5,1)=>(5+1)=6
	  (5,2)=>(5+2)=7
	  (5,5)=>(5+5)=10
	  (5,3)=>(5+3)=8
	  (5,9)=>(5+9)=14
	  
	  (3,1)=>(3+1)=4
	  (3,2)=>(3+2)=5
	  (3,5)=>(3+5)=8
	  (3,3)=>(3+3)=6
	  (3,9)=>(3+9)=12
	  
	  (9,1)=>(9+1)=10
	  (9,2)=>(9+2)=11
	  (9,5)=>(9+5)=14
	  (9,3)=>(9+3)=12
	  (9,9)=>(9+9)=18
	  
	  XOR=(2^3^6^4^10)(3^4^7^5^11)^(6^7^10^8^14)^(4^5^8^6^12)^(10^11^14^12^18)
	     =(3^3^6^6^4^4^10^10^7^7^5^5^11^11^8^8^14^14^12^12)^(2^4^10^6^18)
	     =0^(2^4^10^6^18)
	     =0^(2*1 ^ 2*2 ^ 2*5 ^ 2*3 ^ 2*9)
	     =0^24
	     =24
	*/
}
