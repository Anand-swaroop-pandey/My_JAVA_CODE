//Good Approach
import java.util.*;
public class Test
{
   public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter Number1 in String Form");
        String str1=sc.nextLine();
        System.out.println("Enter Number2 in String Form, having same number of Digits as that of Number1");
        String str2=sc.nextLine();
        System.out.println(str1+"+"+str2+"= "+addTwoNumbers(str1,str2));
    }
	
    public static String addTwoNumbers(String num1, String num2) 
    {
       int m=num1.length(),n=num2.length(),carry=0;
       StringBuilder num=new StringBuilder("");
       for(int i=m-1,j=n-1;(i>=0 && j>=0);i--,j--)
        {
            int d1=num1.charAt(i)-'0';
            int d2=num2.charAt(j)-'0';
            int base;
            if(((d1+d2)+carry)<=9)
            {
               base=((d1+d2)+carry);
               carry=0;
            }
            else
            {
              base=((d1+d2)+carry)%10; 
              carry=1;
            }
            
            num.append(base);
        }
        if(carry==1)
          num.append(carry);
        
        StringBuilder reverseNum =num.reverse();
        
        return reverseNum.toString();
    }
}

//Optimal Approach (Optimised/Compressed Code)

import java.util.*;
public class Test
{
   public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter Number1 in String Form");
        String str1=sc.nextLine();
        System.out.println("Enter Number2 in String Form, having same number of Digits as that of Number1");
        String str2=sc.nextLine();
        System.out.println(str1+"+"+str2+"= "+addTwoNumbers(str1,str2));
    }
	
    public static String addTwoNumbers(String num1, String num2) 
    {
        int m=num1.length(),n=num2.length(),carry=0;
        StringBuilder num=new StringBuilder("");
       
        for(int i=m-1,j=n-1;(i>=0 && j>=0);i--,j--)
        {
            int d1=num1.charAt(i)-'0';
            int d2=num2.charAt(j)-'0';
            
            int base=((d1+d2)+carry)%10;
            carry=((d1+d2)+carry)/10;
            
            num.append(base);
        }
	
        if(carry==1)
          num.append(carry);
        
        StringBuilder reverseNum =num.reverse();
        
        return reverseNum.toString();
    }
}
