//Bruteforce Approach
import java.util.*;
public class Test
{
       public static void main(String[] args) {
         Scanner sc=new Scanner(System.in);
         System.out.println("Enter the Size of the Array1");
         int m=sc.nextInt();
       
         System.out.println("Enter the Size of the Array2");
         int n=sc.nextInt();
         if(m>0 && n>0)
         {
            int[] arr1=new int[m];
            int[] arr2=new int[n];
           System.out.printf("Enter %d Elements of Array1:\n",m);
           for(int i=0;i<m;i++)
              arr1[i]=sc.nextInt();
              
           System.out.printf("Enter %d Elements of Array2:\n",n);
           for(int i=0;i<n;i++)
              arr2[i]=sc.nextInt();
	      
            System.out.print("Intersection of both the Arrays is: {"+intersectionOfTwoSortedArrayContainingDuplicates(arr1,arr2)+"}");      
         }
         else
           System.out.println("Invalid Choice");
        }
	
	public static String intersectionOfTwoSortedArrayContainingDuplicates(int[] arr1,int[] arr2)
	{
	    int index1=removeDuplicatesFromSortedArray(arr1);
	    int index2=removeDuplicatesFromSortedArray(arr2);
	    return intersectionOfTwoSortedArray(arr1,index1,arr2,index2);
	}
	
        public static int removeDuplicatesFromSortedArray(int[] arr)
	{
           int n=arr.length,j=0;
	   for(int i=0;i<(n-1);i++)
             if(arr[i]!=arr[i+1])
               arr[j++]=arr[i];
	       
           arr[j++]=arr[n-1];
	   
	   return j;
	}
	
	public static String intersectionOfTwoSortedArray(int[] arr1,int m,int[] arr2,int n)
	{    
	    int i=0,j=0,m=arr1.length,n=arr2.length;
	    String temp="";
            while(i<m && j<n)
               if(arr1[i]==arr2[j])
               {
                  temp=temp+arr1[i]+",";
                  i++;
                  j++;
               }
               else
               {
                  int min=arr1[i]<arr2[j]?arr1[i]:arr2[j];
                  if(min==arr1[i])
                    i++;
                  else if(min==arr2[j])
                    j++;
               }
	       
               String intersection="";
	       int len=temp.length();
	       
               for(int k=0;k<(len-1);k++)
                  intersection+=temp.charAt(k);
		  
             return intersection;
	 }
}


//Better Approach
import java.util.*;
public class Test
{
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the Size of the Array1");
        int m=sc.nextInt();
       
        System.out.println("Enter the Size of the Array2");
        int n=sc.nextInt();
        if(m>0 && n>0)
        {
          int[] arr1=new int[m];
          int[] arr2=new int[n];
          System.out.printf("Enter %d Elements of Array1:\n",m);
          for(int i=0;i<m;i++)
             arr1[i]=sc.nextInt();
              
          System.out.printf("Enter %d Elements of Array2:\n",n);
          for(int i=0;i<n;i++)
             arr2[i]=sc.nextInt();
	     
          System.out.print("Intersection of both the Arrays is: {"+intersectionOfTwoSortedArrayContainingDuplicates(arr1,arr2)+"}");  
        }
        else
           System.out.println("Invalid Choice");
       }
	
	public static String intersectionOfTwoSortedArrayContainingDuplicates(int[] arr1,int[] arr2)
	{
	    int m=arr1.length,n=arr2.length;
	    HashSet<Integer>hs=new HashSet<>(n);
	     for(int i=0;i<n;i++)
	       hs.add(arr2[i]);
	   
	    String temp="";
	    for(int i=0;i<m;i++)
	      if(hs.contains(arr1[i]))
	      {
	         temp+=arr1[i]+","; 
	         hs.remove(arr1[i]);
	      }

	    String intersection="";
	    int len=temp.length();
	    
	    for(int i=0;i<(len-1);i++)
	      intersection+=temp.charAt(i);
	   
	   return intersection;
	}
}


//Optimal Approach

import java.util.Scanner;
public class Test
{
	public static void main(String[] args) {
          Scanner sc=new Scanner(System.in);
          System.out.println("Enter the Size of the Array1");
          int m=sc.nextInt();
       
          System.out.println("Enter the Size of the Array2");
          int n=sc.nextInt();
          if(m>0 && n>0)
          {
            int[] arr1=new int[m];
            int[] arr2=new int[n];
            System.out.printf("Enter %d Elements of Array1:\n",m);
            for(int i=0;i<m;i++)
              arr1[i]=sc.nextInt();
              
            System.out.printf("Enter %d Elements of Array2:\n",n);
            for(int i=0;i<n;i++)
              arr2[i]=sc.nextInt();
	      
            System.out.print("Intersection of both the Arrays is: {"+intersectionOfTwoSortedArrayContainingDuplicates(arr1,arr2)+"}");  
          }
          else
            System.out.println("Invalid Choice");
        }
	
	public static String intersectionOfTwoSortedArrayContainingDuplicates(int[] arr1,int[] arr2)
	{
           int i=0,j=0,m=arr1.length,n=arr2.length,prev1=Integer.MIN_VALUE,prev2=Integer.MIN_VALUE;
	   String temp="";
	    
           while(i<m && j<n)
           {
          
             while(i<m && prev1==arr1[i])
                i++;
          
             while(j<n && prev2==arr2[j])
                j++;
               
             if(i<m && j<n)
             {
                 if(arr1[i]==arr2[j])
                 {
                   temp+=arr1[i]+",";
                   prev1=arr1[i++];
                   prev2=arr2[j++];
                 
                 }
                 else
                 {
                   int min=Math.min(arr1[i],arr2[j]);
                   if(min==arr1[i])
                     prev1=arr1[i++];
                   else //if(min==arr2[j])
                     prev2=arr2[j++]; 
                 }   
             }
           }
            
          String intersection="";
          int len=temp.length();
          for(int k=0;k<(len-1);k++)
             intersection+=temp.charAt(k);
               
         return intersection;
	}
}
