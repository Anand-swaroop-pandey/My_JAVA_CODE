//Bruteforce Approach
/*
A number will not be a Happy Number when it makes a loop in its sequence /touches a number in sequence which already been touched/Forms a Cycle.
So to check whether a number is happy or not, we can keep a set, if the same number occurs again we flag result as not happy. 

Ex :


*/

import java.util.Scanner;
public class Test
{
	public static void main(String[] args) 
	{
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
 
	    if(happyNumber(n))
	       System.out.println("is happyNumber");
	    else
	       System.out.println("is happyNumber");
	}
	
	
	public static boolean happyNumber(int num)
	{
	    HashSet<Integer>hs=new HashSet<>();
	    
            while(true)
	    {
	       int sumSqr=0;
               while(num!=0)
               {
                  sumSqr+=(num%10)*(num%10);
                  num=num/10;
               }
            
               if(sumSqr==1)
                 return true;
               else if(hs.contains(sumSqr))
                 return false;
               else
               {
                 hs.add(sumSqr);
                 num=sumSqr;  
               }         
	    }
	}
}


