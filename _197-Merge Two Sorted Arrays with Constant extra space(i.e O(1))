//Good Approach
import java.util.*;
public class Test
{
	public static void main(String[] args) {
	   Scanner sc=new Scanner(System.in);
           System.out.println("Enter the Size of the Array1");
           int m=sc.nextInt();
       
           System.out.println("Enter the Size of the Array2");
           int n=sc.nextInt();
           if(m>0 && n>0)
           {
              int[] arr1=new int[m];
              int[] arr2=new int[n];
              System.out.printf("Enter %d Elements of Array1:\n",m);
              for(int i=0;i<m;i++)
                arr1[i]=sc.nextInt();
              
              System.out.printf("Enter %d Elements of Array2:\n",n);
              for(int i=0;i<n;i++)
                arr2[i]=sc.nextInt();
              
              mergeTwoSortedArray(arr1,arr2); 
           }
           else
             System.out.println("Invalid Choice");
	}
	
	public static void mergeTwoSortedArray(int[] arr1,int[] arr2)
	{
	    int m=arr1.length,n=arr2.length,i=m-1,j=0;

            while(i>=0 && j<n)
              if(arr1[i]>arr2[j])
              {
                 int temp=arr1[i];
                 arr1[i]=arr2[j];
                 arr2[j]=temp;
		 
                 i--;
                 j++;
              }
              else
                break;
       
            Arrays.sort(arr1);
            Arrays.sort(arr2);
          
	    System.out.println("Merged Sorted Array is:");
	    System.out.print("arr1[]={");
	    for(i=0;i<m;i++)
	    {
	        System.out.print(arr1[i]);
	        if(i<(m-1))
	           System.out.print(",");
	    }
	      
	    System.out.println("}");
	    
	    
	    System.out.print("arr2[]={");
	    for(i=0;i<n;i++)
	    {
	        System.out.print(arr2[i]);
	        if(i<(n-1))
	           System.out.print(",");
	    }
	    System.out.print("}");
	}
}


//Better Approach
import java.util.*;
public class Test
{
       public static void main(String[] args) {
         Scanner sc=new Scanner(System.in);
         System.out.println("Enter the Size of the Array1");
         int m=sc.nextInt();
       
         System.out.println("Enter the Size of the Array2");
         int n=sc.nextInt();
         if(m>0 && n>0)
         {
           int[] arr1=new int[m];
           int[] arr2=new int[n];
	   
           System.out.printf("Enter %d Elements of Array1:\n",m);
           for(int i=0;i<m;i++)
              arr1[i]=sc.nextInt();
              
           System.out.printf("Enter %d Elements of Array2:\n",n);
           for(int i=0;i<n;i++)
              arr2[i]=sc.nextInt();
              
            mergeTwoSortedArray(arr1,arr2); 
         }
         else
           System.out.println("Invalid Choice");
	}
	
	public static void mergeTwoSortedArray(int[] arr1,int[] arr2)
	{
	    int m=arr1.length,n=arr2.length;
            for(int i=0;i<m;i++)
              if(arr1[i]>arr2[0])
              {
                int temp=arr1[i];
                arr1[i]=arr2[0];
                arr2[0]=temp;
                Arrays.sort(arr2);
              }

	    System.out.println("Merged Sorted Array is:");
	    System.out.print("arr1[]={");
	    for(int i=0;i<m;i++)
	    {
	        System.out.print(arr1[i]);
	        if(i<(m-1))
	           System.out.print(",");
	    }
	    System.out.println("}");
	    
	    
	    System.out.print("arr2[]={");
	    for(int i=0;i<n;i++)
	    {
	        System.out.print(arr2[i]);
	        if(i<(n-1))
	           System.out.print(",");
	    }
	    System.out.print("}");
	}
}


//Optimal Approach
import java.util.*;
public class Test
{
    public static void main(String[] args)
    {
	  Scanner sc=new Scanner(System.in);
          System.out.println("Enter the Size of the Array1");
          int m=sc.nextInt();
       
          System.out.println("Enter the Size of the Array2");
          int n=sc.nextInt();
          if(m>0 && n>0)
          {
            int[] arr1=new int[m];
            int[] arr2=new int[n];
            System.out.printf("Enter %d Elements of Array1:\n",m);
            for(int i=0;i<m;i++)
              arr1[i]=sc.nextInt();
              
            System.out.printf("Enter %d Elements of Array2:\n",n);
            for(int i=0;i<n;i++)
              arr2[i]=sc.nextInt();
              
           mergeTwoSortedArray(arr1,arr2); 
         }
         else
           System.out.println("Invalid Choice");
    }
	
	
    public static void mergeTwoSortedArray(int[] arr1,int[] arr2)
    {
        int m=arr1.length,n=arr2.length,len=m+n;
        int gap=(int) Math.ceil((double)len/ 2.0);
        while(gap>0)
        {
    	   for(int i=0,j=gap;j<len;i++,j++)	 // comparing elements in the first array.
              if (j < m && (arr1[i] > arr1[j]))
              {
                  int temp=arr1[i];
                  arr1[i]=arr1[j];
                  arr1[j]=temp;
              }
              else if (j >= m && i < m && (arr1[i] > arr2[j - m]))// comparing elements in both arrays.
              {
                  int temp=arr1[i];
                  arr1[i]=arr2[j-m];
                  arr2[j-m]=temp;
              }
              else if (j >= m && i >= m && (arr2[i - m] > arr2[j - m]))// comparing elements in the Second array..
              {
                   int temp=arr2[i-m];
 	           arr2[i-m]=arr2[j-m];
 	           arr2[j-m]=temp;
              }
    	   
    	      if(gap==1)
    		gap=(int) Math.ceil(gap/ 2);//gap=0
    	      else
    	        gap=(int) Math.ceil((double)gap/ 2.0);
        }
         
      
        System.out.println("Merged Sorted Array is:");
     
        System.out.print("arr1[]={");
        for(int i=0;i<m;i++)
        {
           System.out.print(arr1[i]);
           if(i<(m-1)) 
             System.out.print(",");
        }
        System.out.println("}");
    
        System.out.print("arr2[]={");
        for(int i=0;i<n;i++)
        {
           System.out.print(arr2[i]);
           if(i<(n-1))
             System.out.print(",");
        }
        System.out.println("}");
   }
}

/*
First example: 
a1[] = {3 27 38 43}, 
a2[] = {9 10 82}
Start with 
gap =  ceiling of n/2 = 4 
[This gap is for whole merged array]
3 27 38 43   9 10 82 
3 27 38 43   9 10 82
3 10 38 43   9 27 82

gap = 2:
3 10 38 43   9 27 82
3 10 38 43   9 27 82
3 10 38 43   9 27 82 
3 10 9 43   38 27 82
3 10 9 27   38 43 82

gap = 1:
3 10 9 27   38 43 82
3 10 9 27   38 43 82
3 9 10 27   38 43 82
3 9 10 27   38 43 82
3 9 10 27   38 43 82
3 9 10 27   38 43 82
Output : 3 9 10 27 38 43 82

Second Example: 
a1[] = {10 27 38 43 82}, 
a2[] = {3 9}
Start with gap = ceiling of n/2 (4):
10 27 38 43 82   3 9 
10 27 38 43 82   3 9
10 3 38 43 82   27 9
10 3 9 43 82   27 38

gap = 2:
10 3 9 43 82   27 38
9 3 10 43 82   27 38
9 3 10 43 82   27 38
9 3 10 43 82   27 38
9 3 10 27 82   43 38
9 3 10 27 38   43 82

gap = 1
9 3 10 27 38   43 82
3 9 10 27 38   43 82
3 9 10 27 38   43 82
3 9 10 27 38   43 82
3 9 10 27 38   43 82
3 9 10 27 38   43 82


Output : 3 9 10 27 38   43 82
*/
