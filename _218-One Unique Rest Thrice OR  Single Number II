//Bruteforce Approach
import java.util.Scanner;
public class Test
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    System.out.println("Enter the Size of the Array");
	    int n=sc.nextInt();
	    int[] arr=new int[n];
	     System.out.printf("Enter %d Elements\n",n);
	    for(int i=0;i<n;i++)
	       arr[i]=sc.nextInt();
            System.out.println("Element occurring once is: "+findSingle(arr));
	}
	
	public static int findSingle(int arr[])
	{
            int res=-1,n=arr.length;
	    for(int i=0;i<n;i++)
	    {
	        int j;
	        for(j=0;j<n;j++)
	          if(j!=i && arr[i]==arr[j])
	             break;
	              
	        if(j==n)
	        {
	            res=arr[i];
	            break;
	        }
	    }
	    return res;
	}
}


//Improved Approach 
import java.util.Scanner;
public class Test
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    System.out.println("Enter the Size of the Array");
	    int n=sc.nextInt();
	    int[] arr=new int[n];
	     System.out.printf("Enter %d Elements\n",n);
	    for(int i=0;i<n;i++)
	       arr[i]=sc.nextInt();
           System.out.println("Element occurring once is: "+findSingle(arr));
	}
	
	public static int findSingle(int arr[])
	{
	    int res=-1,n=arr.length;
	    int[] freqArr=new int[n];
	    countFrequency(arr,n,freqArr);
	    for(int i=0;i<n;i++)
	       if(freqArr[i]==1)
	       {
	           res=arr[i];
	           break;
	       } 
	     return res;
	}
	
	public static void countFrequency(int[] arr,int n,int[] freqArr)
	{
           for(int i=0;i<n;i++)
           {
             if(freqArr[i]==-1)
               continue;
            
             int count=1;
             for(int j=i+1;j<n;j++)
                if(arr[i]==arr[j])
                {
                   freqArr[j]=-1;
                   count++;
                }
             freqArr[i]=count; 
           }
	}
}



//Further Improved Approach
import java.util.Scanner;
public class Test
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    System.out.println("Enter the Size of the Array");
	    int n=sc.nextInt();
	    int[] arr=new int[n];
	     System.out.printf("Enter %d Elements\n",n);
	    for(int i=0;i<n;i++)
	       arr[i]=sc.nextInt();
            System.out.println("Element occurring once is: "+findSingle(arr));
	}
	
       public static int findSingle(int arr[])
       {
            int sum=0,arrSum=0,n=arr.length;
	    int[] freqArr=new int[n];
	    countFrequency(arr,n,freqArr);
	    for(int i=0;i<n;i++)
	    {
	        if(freqArr[i]!=-1)
                   sum+=arr[i];
                arrSum+=arr[i];  
	    }
            int missing=((3*sum)-arrSum)/2;
            return missing;
	}
	
	
	public static void countFrequency(int[] arr,n,int[] freqArr)
	{  
           for(int i=0;i<n;i++)
           {
             if(freqArr[i]==-1)
               continue;
	       
             int count=1;
             for(int j=i+1;j<n;j++)
                if(arr[i]==arr[j])
                {
                   freqArr[j]=-1;
                   count++;
                }
            freqArr[i]=count; 
           }
	}
}

//Good Approach
import java.util.*;
public class Test
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    System.out.println("Enter the Size of the Array");
	    int n=sc.nextInt();
	    int[] arr=new int[n];
	     System.out.printf("Enter %d Elements\n",n);
	    for(int i=0;i<n;i++)
	       arr[i]=sc.nextInt();
            System.out.println("Element occurring once is: "+findSingle(arr));
	}
	
        public static int findSingle(int[] arr)
	{
	   Arrays.sort(arr);
	   int res=-1,n=arr.length;
	   for(int i=0;i<n;i++)
	   {   
	       if( i==(n-1) || arr[i]!=arr[i+1] )
	       {
	          res=arr[i];
	          break;
	       }
	       
	       while(i<(n-1) && arr[i]==arr[i+1])
	         i++;
	   }
	   return res;   
       }
}

//Better Approach
import java.util.*;
public class Test
{
    public static void main(String[] args)
    {	    
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the Size of the Array")
	int n=sc.nextInt();
        int[] arr=new int[n];
	System.out.printf("Enter %d Elements\n",n);
        for(int i=0;i<n;i++)
	   arr[i]=sc.nextInt();
        System.out.println("Element occurring once is: "+findSingle(arr));
    }
		
    public static int findSingle(int arr[])
    {
       int n=arr.length,res=-1;
       HashMap<Integer,Integer>hm=new HashMap<>(n);
       
        for(int i=0;i<n;i++)
          if(hm.containsKey(arr[i]))
             hm.put(arr[i],hm.get(arr[i])+1);
          else
             hm.put(arr[i],1);
       
        for(int key:hm.keySet()) 
          if(hm.get(key)==1)
          {
            res=key;
            break;
          }
	  
        return res;
    }
}


//Optimal Approach
import java.util.Scanner;
public class Test
{
   public static void main(String[] args)
   {
	System.out.println("Enter the Size of the Array:");
	Scanner sc=new Scanner(System.in);
	int n=sc.nextInt();
	int[] arr=new int[n];
	System.out.printf("Enter %d of the Array:\n",n);
	for(int i=0;i<n;i++)
	  arr[i]=sc.nextInt();
	System.out.println("Element occurring once is: "+findUnique(arr));
    }
	
   public static int findUnique(int arr[])
   {
      int ans=0;
      for(int i=0;i<32;i++)
      {
          int count1=0;
	  int mask=1<<i;
          for(int j=0;j<arr.length;j++)
              if((arr[j]&mask)!=0)
                count1++;
		
          if((count1%3)==1)//3n+1 form so set ith bit of the answer
            ans=ans|mask;
      }
      return ans;
   }
}



