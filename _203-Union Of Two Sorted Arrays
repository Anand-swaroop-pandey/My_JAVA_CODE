//Bruteforce Approach
import java.util.*;
public class Test
{
       public static void main(String[] args) {
          Scanner sc=new Scanner(System.in);
          System.out.println("Enter the Size of the Array1");
          int m=sc.nextInt();
       
          System.out.println("Enter the Size of the Array2");
          int n=sc.nextInt();
          if(m>0 && n>0)
          {
             int[] arr1=new int[m];
             int[] arr2=new int[n];
             System.out.printf("Enter %d Elements of Array1:\n",m);
             for(int i=0;i<m;i++)
               arr1[i]=sc.nextInt();
              
             System.out.printf("Enter %d Elements of Array2:\n",n);
             for(int i=0;i<n;i++)
               arr2[i]=sc.nextInt();
	       
             System.out.print("Union of both the Arrays is: "+unionOfTwoSortedArray(arr1,arr2));   
          }
          else
            System.out.println("Invalid Choice");
        }
	
	public static List<Integer> unionOfTwoSortedArray(int[] arr1,int[] arr2)
	{
	    List<Integer>union=new ArrayList<>();
	
            for(int val: arr1)
              union.add(val);
        
            for(int val:arr2)
              if(binarySearch(arr1,val)==false)
                union.add(val);
              
            Collections.sort(union);
        
          return union;
       }
	
	
       public static boolean binarySearch(int[]arr,int key)
       {
         int low=0,high=arr.length-1,mid;
         while(low<=high)
         {
          mid=(low+high)/2;
          if(arr[mid]==key)
            return true;
          else if(key<arr[mid])
            high=mid-1;
          else if(key>arr[mid])
            low=mid+1;
         }
        return false;//key doesnot exists
       }
}



//Better Approach

import java.util.*;
public class Test
{
       public static void main(String[] args) {
          Scanner sc=new Scanner(System.in);
          System.out.println("Enter the Size of the Array1");
          int m=sc.nextInt();
       
          System.out.println("Enter the Size of the Array2");
          int n=sc.nextInt();
          if(m>0 && n>0)
          {
             int[] arr1=new int[m];
             int[] arr2=new int[n];
             System.out.printf("Enter %d Elements of Array1:\n",m);
             for(int i=0;i<m;i++)
               arr1[i]=sc.nextInt();
              
             System.out.printf("Enter %d Elements of Array2:\n",n);
             for(int i=0;i<n;i++)
               arr2[i]=sc.nextInt();
	       
             System.out.print("Union of both the Arrays is: "+unionOfTwoSortedArray(arr1,arr2));   
          }
          else
            System.out.println("Invalid Choice");
        }
	
	public static List<Integer> unionOfTwoSortedArray(int[] arr1,int[] arr2)
	{
           TreeSet<Integer>ts=new TreeSet<>();
           List<Integer>union=new ArrayList<>();
        
           for(int val : arr1)
             ts.add(val);
	    
           for(int val : arr2)
             ts.add(val);
        
   
	   for(int val:ts)
             union.add(val);
	    
	   return union;
        }
}


//Optimal Approach

import java.util.*;
public class Test
{
       public static void main(String[] args) {
          Scanner sc=new Scanner(System.in);
          System.out.println("Enter the Size of the Array1");
          int m=sc.nextInt();
       
          System.out.println("Enter the Size of the Array2");
          int n=sc.nextInt();
          if(m>0 && n>0)
          {
             int[] arr1=new int[m];
             int[] arr2=new int[n];
             System.out.printf("Enter %d Elements of Array1:\n",m);
             for(int i=0;i<m;i++)
               arr1[i]=sc.nextInt();
              
             System.out.printf("Enter %d Elements of Array2:\n",n);
             for(int i=0;i<n;i++)
               arr2[i]=sc.nextInt();
	       
             System.out.print("Union of both the Arrays is: "+unionOfTwoSortedArray(arr1,arr2));   
          }
          else
            System.out.println("Invalid Choice");
        }
	
	public static List<Integer> unionOfTwoSortedArray(int[] arr1,int[] arr2)
	{
            int i=0,j=0,m=arr1.length,n=arr2.length;
            List<Integer>union=new ArrayList<>();
	    
            while(i<m && j<n)
              if(arr1[i]==arr2[j])
              {
                union.add(arr1[i]);
                i++;
                j++;
              }
              else
              {
                int min=Math.min(arr1[i],arr2[j]);
                if(min==arr1[i])
                  union.add(arr1[i++]);
                else // if(min==arr2[j])
                  union.add(arr2[j++]);
              }
          
             while(i<m)
               union.add(arr1[i++]);
          
             while(j<n)
               union.add(arr2[j++]);
               
          return union;
        }
}
