//Bruteforce Approach
import java.util.Scanner;
public class Test
{
   public static void main(String[] args)
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
         {
            int[] arr=new int[n];
           System.out.printf("Enter %d Elements:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();

           if(n>1)
             sort0s1sAnd2s(arr);
             System.out.println("Segregated Array :");
             for(int i=0;i<n;i++)
                System.out.println(arr[i]);
         }
         else
            System.out.println("Invalid Choice");
   }

   public static void sort0s1sAnd2s(int[]arr)
   {
     int count0=0,count1=0,count2=0;
     for(int i=0;i<arr.length;i++)
        if(arr[i]==0)
          count0++;
        else if(arr[i]==1)
          count1++;
        else
          count2++;
      
      for(int i=0;i<count0;i++)
         arr[i]=0;
         
      for(int i=count0;i<(count0+count1);i++)
         arr[i]=1; 
         
      for(int i=(count0+count1);i<arr.length;i++)
         arr[i]=2;
   }
}

//Optimal Approach(Dutch National Flag Algorithm)

import java.util.Scanner;
public class Test
{
   public static void main(String[] args)
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("Enter the Size of the Array");
       int n=sc.nextInt();
       if(n>0)
         {
            int[] arr=new int[n];
           System.out.printf("Enter %d Elements:\n",n);
           for(int i=0;i<n;i++)
              arr[i]=sc.nextInt();

           if(n>1)
             sort0s1sAnd2s(arr);
             System.out.println("Segregated Array :");
             for(int i=0;i<n;i++)
                System.out.println(arr[i]);
         }
         else
            System.out.println("Invalid Choice");
   }

    public static void sort0s1sAnd2s(int[]arr)
   {
      int p0=0,i=0,p2=(arr.length-1);
      while(i<=p2)
         if(arr[i]==0)
         {
            swap(arr,p0,i);
            p0++;
            i++; 
         }
         else if(arr[i]==2)
         {
             swap(arr,i,p2);
             p2--;  
         }
         else if(arr[i]==1)
             i++;
   }
   
   public static void swap(int[]arr,int i,int j)
   {
       int temp=arr[i];
       arr[i]=arr[j];
       arr[j]=temp;
   }
}
